[{"path":[]},{"path":"/articles/desctable.html","id":"simple","dir":"Articles","previous_headings":"Descriptive tables","what":"Simple","title":"desctable usage vignette","text":"Creating descriptive table desctable easy  default, desc_table select appropriate statistics given table, can choose easily can see N = length, can give meaningful name column instead name function. limited options, can use statistical function exists R, even ! can also use purrr::map-like formulas, example get first third quartiles ","code":"iris %>%   desc_table() ##                   Variables   N        % Min  Q1  Med     Mean  Q3 Max ## 1              Sepal.Length 150       NA 4.3 5.1 5.80 5.843333 6.4 7.9 ## 2               Sepal.Width 150       NA 2.0 2.8 3.00 3.057333 3.3 4.4 ## 3              Petal.Length 150       NA 1.0 1.6 4.35 3.758000 5.1 6.9 ## 4               Petal.Width 150       NA 0.1 0.3 1.30 1.199333 1.8 2.5 ## 5               **Species** 150       NA  NA  NA   NA       NA  NA  NA ## 6     **Species**: *setosa*  50 33.33333  NA  NA   NA       NA  NA  NA ## 7 **Species**: *versicolor*  50 33.33333  NA  NA   NA       NA  NA  NA ## 8  **Species**: *virginica*  50 33.33333  NA  NA   NA       NA  NA  NA ##          sd IQR ## 1 0.8280661 1.3 ## 2 0.4358663 0.5 ## 3 1.7652982 3.5 ## 4 0.7622377 1.5 ## 5        NA  NA ## 6        NA  NA ## 7        NA  NA ## 8        NA  NA mtcars %>%   desc_table(N = length,              mean,              sd) ##    Variables  N       mean          sd ## 1        mpg 32  20.090625   6.0269481 ## 2        cyl 32   6.187500   1.7859216 ## 3       disp 32 230.721875 123.9386938 ## 4         hp 32 146.687500  68.5628685 ## 5       drat 32   3.596563   0.5346787 ## 6         wt 32   3.217250   0.9784574 ## 7       qsec 32  17.848750   1.7869432 ## 8         vs 32   0.437500   0.5040161 ## 9         am 32   0.406250   0.4989909 ## 10      gear 32   3.687500   0.7378041 ## 11      carb 32   2.812500   1.6152000 iris %>%   desc_table(N = length,              \"%\" = percent,              Q1 = ~ quantile(., .25),              Med = median,              Q3 = ~ quantile(., .75)) ##                   Variables   N        %  Q1  Med  Q3 ## 1              Sepal.Length 150       NA 5.1 5.80 6.4 ## 2               Sepal.Width 150       NA 2.8 3.00 3.3 ## 3              Petal.Length 150       NA 1.6 4.35 5.1 ## 4               Petal.Width 150       NA 0.3 1.30 1.8 ## 5               **Species** 150       NA  NA   NA  NA ## 6     **Species**: *setosa*  50 33.33333  NA   NA  NA ## 7 **Species**: *versicolor*  50 33.33333  NA   NA  NA ## 8  **Species**: *virginica*  50 33.33333  NA   NA  NA"},{"path":"/articles/desctable.html","id":"by-group","dir":"Articles","previous_headings":"Descriptive tables","what":"By group","title":"desctable usage vignette","text":"can also create nested descriptive tables applying group_by dataframe However, grouping, can see resulting object simple data frame, nested dataframe (see tidyr::nest tidyr::unnest).desctable provides output functions format object various outputs. Right now, desctable supports data.frame, pander, DT outputs. output functions also round numerical values, well p values tests (’ll see desc_tests bit later).","code":"iris %>%   group_by(Species) %>%   desc_table() ## # A tibble: 3 × 4 ## # Groups:   Species [3] ##   Species    data              .stats       .vars        ##   <fct>      <list>            <list>       <list>       ## 1 setosa     <tibble [50 × 4]> <df [4 × 8]> <df [4 × 1]> ## 2 versicolor <tibble [50 × 4]> <df [4 × 8]> <df [4 × 1]> ## 3 virginica  <tibble [50 × 4]> <df [4 × 8]> <df [4 × 1]> mtcars %>%   group_by(am) %>%   desc_table() %>%   desc_output(\"df\") ##      am = 1 (N = 13)\\nMin  Q1 Med Mean  Q3 Max   sd  IQR am = 0 (N = 19)\\nMin ## mpg                    15  21  23   24  30  34  6.2  9.4                   10 ## cyl                     4   4   4  5.1   6   8  1.6    2                    4 ## disp                   71  79 120  144 160 351   87   81                  120 ## hp                     52  66 109  127 113 335   84   47                   62 ## drat                  3.5 3.9 4.1    4 4.2 4.9 0.36 0.37                  2.8 ## wt                    1.5 1.9 2.3  2.4 2.8 3.6 0.62 0.84                  2.5 ## qsec                   14  16  17   17  19  20  1.8  2.1                   15 ## vs                      0   0   1 0.54   1   1 0.52    1                    0 ## gear                    4   4   4  4.4   5   5 0.51    1                    3 ## carb                    1   1   2  2.9   4   8  2.2    3                    1 ##       Q1 Med Mean  Q3 Max   sd  IQR ## mpg   15  17   17  19  24  3.8  4.2 ## cyl    6   8  6.9   8   8  1.5    2 ## disp 196 276  290 360 472  110  164 ## hp   116 175  160 192 245   54   76 ## drat 3.1 3.1  3.3 3.7 3.9 0.39 0.63 ## wt   3.4 3.5  3.8 3.8 5.4 0.78 0.41 ## qsec  17  18   18  19  23  1.8    2 ## vs     0   0 0.37   1   1  0.5    1 ## gear   3   3  3.2   3   4 0.42    0 ## carb   2   3  2.7   4   4  1.1    2 mtcars %>%   group_by(am) %>%   desc_table() %>%   desc_output(\"pander\") mtcars %>%   group_by(am) %>%   desc_table() %>%   desc_output(\"DT\")"},{"path":"/articles/desctable.html","id":"comparative-tables","dir":"Articles","previous_headings":"","what":"Comparative tables","title":"desctable usage vignette","text":"can add tests grouped descriptive desctable default, desc_tests select appropriate statistical tests given table, can choose easily. example, compare Sepal.Width using Student’s t test Note name test must prepended tilde (~) cases! can also use purrr::map-like formulas change tests options See tips tricks go .","code":"iris %>%   group_by(Petal.Length > 5) %>%   desc_table() %>%   desc_tests() %>%   desc_output(\"DT\") iris %>%   group_by(Petal.Length > 5) %>%   desc_table(mean, sd, median, IQR) %>%   desc_tests(Sepal.Width = ~t.test) %>%   desc_output(\"DT\") iris %>%   group_by(Petal.Length > 5) %>%   desc_table(mean, sd, median, IQR) %>%   desc_tests(Sepal.Width = ~t.test(., var.equal = T)) %>%   desc_output(\"DT\")"},{"path":[]},{"path":"/articles/desctable_deprecated.html","id":"simple-usage","dir":"Articles","previous_headings":"Descriptive tables","what":"Simple usage","title":"desctable usage vignette (deprecated)","text":"desctable uses exports pipe (%>%) operator (packages magrittr dplyr fame), though mandatory use . single interface package eponymous desctable function. used data.frame, returns descriptive table:  can see two examples, desctable describes every variable, individual levels factors. picks statistical functions depending type distribution variables data, applies statistical functions relevant variables.","code":"iris %>%   desctable() ##                         N        % Min  Q1  Med     Mean  Q3 Max        sd IQR ## 1        Sepal.Length 150       NA 4.3 5.1 5.80 5.843333 6.4 7.9 0.8280661 1.3 ## 2         Sepal.Width 150       NA 2.0 2.8 3.00 3.057333 3.3 4.4 0.4358663 0.5 ## 3        Petal.Length 150       NA 1.0 1.6 4.35 3.758000 5.1 6.9 1.7652982 3.5 ## 4         Petal.Width 150       NA 0.1 0.3 1.30 1.199333 1.8 2.5 0.7622377 1.5 ## 5             Species 150       NA  NA  NA   NA       NA  NA  NA        NA  NA ## 6     Species: setosa  50 33.33333  NA  NA   NA       NA  NA  NA        NA  NA ## 7 Species: versicolor  50 33.33333  NA  NA   NA       NA  NA  NA        NA  NA ## 8  Species: virginica  50 33.33333  NA  NA   NA       NA  NA  NA        NA  NA desctable(mtcars) ##            Min        Q1     Med       Mean     Q3     Max          sd ## 1   mpg 10.400  15.42500  19.200  20.090625  22.80  33.900   6.0269481 ## 2   cyl  4.000   4.00000   6.000   6.187500   8.00   8.000   1.7859216 ## 3  disp 71.100 120.82500 196.300 230.721875 326.00 472.000 123.9386938 ## 4    hp 52.000  96.50000 123.000 146.687500 180.00 335.000  68.5628685 ## 5  drat  2.760   3.08000   3.695   3.596563   3.92   4.930   0.5346787 ## 6    wt  1.513   2.58125   3.325   3.217250   3.61   5.424   0.9784574 ## 7  qsec 14.500  16.89250  17.710  17.848750  18.90  22.900   1.7869432 ## 8    vs  0.000   0.00000   0.000   0.437500   1.00   1.000   0.5040161 ## 9    am  0.000   0.00000   0.000   0.406250   1.00   1.000   0.4989909 ## 10 gear  3.000   3.00000   4.000   3.687500   4.00   5.000   0.7378041 ## 11 carb  1.000   2.00000   2.000   2.812500   4.00   8.000   1.6152000 ##          IQR ## 1    7.37500 ## 2    4.00000 ## 3  205.17500 ## 4   83.50000 ## 5    0.84000 ## 6    1.02875 ## 7    2.00750 ## 8    1.00000 ## 9    1.00000 ## 10   1.00000 ## 11   2.00000"},{"path":"/articles/desctable_deprecated.html","id":"output","dir":"Articles","previous_headings":"Descriptive tables","what":"Output","title":"desctable usage vignette (deprecated)","text":"object produced desctable fact list data.frames, “desctable” class. Methods reduction simple dataframe (.data.frame, automatically used printing), conversion markdown (pander), interactive html output DT (datatable) provided:  use pander need load package . Calls pander datatable “regular” dataframes affected defaults used package, can modify defaults desctable objects. datatable wrapper function desctable objects comes default options formatting freezing row names table header, export buttons, rounding values. pander datatable wrapper take digits argument set number decimals show. (pander uses digits, justify missing arguments pandoc.table, whereas datatable calls prettyNum digits parameter, removes NA values. can set digits = NULL want full table format ) Subsequent outputs vignette use DT.","code":"iris %>%   desctable() %>%   pander() mtcars %>%   desctable() %>%   datatable()"},{"path":"/articles/desctable_deprecated.html","id":"advanced-usage","dir":"Articles","previous_headings":"Descriptive tables","what":"Advanced usage","title":"desctable usage vignette (deprecated)","text":"desctable automatically chooses statistical functions none provided, using following algorithm: always show N factors, show % normally distributed variables, show Mean SD non-normally distributed variables, show Median IQR variable table, compute relevant statistical functions list (non-applicable functions safely return NA). can specify statistical functions stats argument. argument can either : function automatic selection appropriate statistical functions, depending data named list functions/formulas functions/formulas leverage tidyverse way working anonymous functions, .e.: function, used . formula, e.g. ‘~ .x + 1’ ~ . + 1, converted function. three ways refer arguments: single argument function, use ‘.’ two argument function, use ‘.x’ ‘.y’ arguments, use ‘..1’, ‘..2’, ‘..3’ etc syntax allows create compact anonymous functions, map family functions purrr. Conditional formulas (condition ~ if_T | F) previous versions longer supported!","code":""},{"path":"/articles/desctable_deprecated.html","id":"automatic-function","dir":"Articles","previous_headings":"Descriptive tables > Advanced usage","what":"Automatic function","title":"desctable usage vignette (deprecated)","text":"default value stats argument stats_auto, provided package. Several “automatic statistical functions” defined package: stats_auto, stats_default, stats_normal, stats_nonnormal. can also provide automatic function, needs accept dataframe argument (whether use dataframe function choice), return named list statistical functions use, defined subsequent paragraphs.  reference, body stats_auto function package:","code":"# Strictly equivalent to iris %>% desctable() %>% datatable() iris %>%   desctable(stats = stats_auto) %>%   datatable() ## function (data)  ## { ##     numeric <- data %>% lapply(is.numeric) %>% unlist() %>% any ##     fact <- data %>% lapply(is.factor) %>% unlist() %>% any() ##     stats <- list(Min = min, Q1 = ~quantile(., 0.25), Med = stats::median,  ##         Mean = mean, Q3 = ~quantile(., 0.75), Max = max, sd = stats::sd,  ##         IQR = IQR) ##     if (fact & numeric)  ##         c(list(N = length, `%` = percent), stats) ##     else if (fact & !numeric)  ##         list(N = length, `%` = percent) ##     else if (!fact & numeric)  ##         stats ## } ## <bytecode: 0x5565219e49a8> ## <environment: namespace:desctable>"},{"path":"/articles/desctable_deprecated.html","id":"statistical-functions","dir":"Articles","previous_headings":"Descriptive tables > Advanced usage","what":"Statistical functions","title":"desctable usage vignette (deprecated)","text":"Statistical functions can function defined R want use, length mean. condition return single numerical value. One exception return vector length 1 + nlevels(x) applied factors, needed percent function. mentioned , need used inside named list,  names used column headers resulting table, functions applied safely variables (errors return NA, factors function used individual levels). Several convenience functions included package. percent, prints percentages levels factor IQR, re-implements stats::IQR works better NA values .normal, tests normality using following method: length(na.omit(x)) > 30 & shapiro.test(x)$p.value > .1 aware functions used variables stripped NA values! necessary statistical functions useful, makes N (length) show number observations dataset variable.","code":"mtcars %>%   desctable(stats = list(\"N\" = length, \"Mean\" = mean, \"SD\" = sd)) %>%   datatable()"},{"path":"/articles/desctable_deprecated.html","id":"labels","dir":"Articles","previous_headings":"Descriptive tables > Advanced usage","what":"Labels","title":"desctable usage vignette (deprecated)","text":"often case variable names “pretty” enough used -table. Although still edit variable labels table afterwards using sub-setting string replacement functions, provide facility using labels argument. labels argument named character vector associating variable names labels. don’t need provide labels variables, extra labels silently discarded. allows define “global” labels vector use multiple tables even variable selections.","code":"mtlabels <- c(mpg  = \"Miles/(US) gallon\",               cyl  = \"Number of cylinders\",               disp = \"Displacement (cu.in.)\",               hp   = \"Gross horsepower\",               drat = \"Rear axle ratio\",               wt   = \"Weight (1000 lbs)\",               qsec = \"¼ mile time\",               vs   = \"V/S\",               am   = \"Transmission\",               gear = \"Number of forward gears\",               carb = \"Number of carburetors\")  mtcars %>%   dplyr::mutate(am = factor(am, labels = c(\"Automatic\", \"Manual\"))) %>%   desctable(labels = mtlabels) %>%   datatable()"},{"path":[]},{"path":"/articles/desctable_deprecated.html","id":"simple-usage-1","dir":"Articles","previous_headings":"Comparative tables","what":"Simple usage","title":"desctable usage vignette (deprecated)","text":"Creating comparative table (groups defined factor) using desctable easy creating descriptive table. leverages group_by function dplyr:  result table containing descriptive sub-table level grouping factor (statistical functions rules applied sub-table independently), statistical tests performed, p values. displayed flat dataframe, grouping header appears variable name. can also see grouping headers inspecting resulting object, nested list dataframes, dataframe named grouping factor levels (sample size ).  can specify groups based variable, factors:  can also specify groups based expression  Multiple nested groups also possible:  case nested groups (.k.. sub-group analysis), statistical tests performed groups deepest grouping level. Statistical tests automatically selected depending data grouping factor.","code":"iris %>%   group_by(Species) %>%   desctable() -> iris_by_Species  iris_by_Species ##                Species: setosa (n=50) / Min Species: setosa (n=50) / Q1 ## 1 Sepal.Length                          4.3                         4.8 ## 2  Sepal.Width                          2.3                         3.2 ## 3 Petal.Length                          1.0                         1.4 ## 4  Petal.Width                          0.1                         0.2 ##   Species: setosa (n=50) / Med Species: setosa (n=50) / Mean ## 1                          5.0                         5.006 ## 2                          3.4                         3.428 ## 3                          1.5                         1.462 ## 4                          0.2                         0.246 ##   Species: setosa (n=50) / Q3 Species: setosa (n=50) / Max ## 1                       5.200                          5.8 ## 2                       3.675                          4.4 ## 3                       1.575                          1.9 ## 4                       0.300                          0.6 ##   Species: setosa (n=50) / sd Species: setosa (n=50) / IQR ## 1                   0.3524897                        0.400 ## 2                   0.3790644                        0.475 ## 3                   0.1736640                        0.175 ## 4                   0.1053856                        0.100 ##   Species: versicolor (n=50) / Min Species: versicolor (n=50) / Q1 ## 1                              4.9                           5.600 ## 2                              2.0                           2.525 ## 3                              3.0                           4.000 ## 4                              1.0                           1.200 ##   Species: versicolor (n=50) / Med Species: versicolor (n=50) / Mean ## 1                             5.90                             5.936 ## 2                             2.80                             2.770 ## 3                             4.35                             4.260 ## 4                             1.30                             1.326 ##   Species: versicolor (n=50) / Q3 Species: versicolor (n=50) / Max ## 1                             6.3                              7.0 ## 2                             3.0                              3.4 ## 3                             4.6                              5.1 ## 4                             1.5                              1.8 ##   Species: versicolor (n=50) / sd Species: versicolor (n=50) / IQR ## 1                       0.5161711                            0.700 ## 2                       0.3137983                            0.475 ## 3                       0.4699110                            0.600 ## 4                       0.1977527                            0.300 ##   Species: virginica (n=50) / Min Species: virginica (n=50) / Q1 ## 1                             4.9                          6.225 ## 2                             2.2                          2.800 ## 3                             4.5                          5.100 ## 4                             1.4                          1.800 ##   Species: virginica (n=50) / Med Species: virginica (n=50) / Mean ## 1                            6.50                            6.588 ## 2                            3.00                            2.974 ## 3                            5.55                            5.552 ## 4                            2.00                            2.026 ##   Species: virginica (n=50) / Q3 Species: virginica (n=50) / Max ## 1                          6.900                             7.9 ## 2                          3.175                             3.8 ## 3                          5.875                             6.9 ## 4                          2.300                             2.5 ##   Species: virginica (n=50) / sd Species: virginica (n=50) / IQR    tests / p ## 1                      0.6358796                           0.675 8.918734e-22 ## 2                      0.3224966                           0.375 1.569282e-14 ## 3                      0.5518947                           0.775 4.803974e-29 ## 4                      0.2746501                           0.500 3.261796e-29 ##   tests / test ## 1 kruskal.test ## 2 kruskal.test ## 3 kruskal.test ## 4 kruskal.test str(iris_by_Species) ## List of 5 ##  $ Variables                 :'data.frame':  4 obs. of  1 variable: ##   ..$ Variables: chr [1:4] \"Sepal.Length\" \"Sepal.Width\" \"Petal.Length\" \"Petal.Width\" ##  $ Species: setosa (n=50)    :'data.frame':  4 obs. of  8 variables: ##   ..$ Min : num [1:4] 4.3 2.3 1 0.1 ##   ..$ Q1  : num [1:4] 4.8 3.2 1.4 0.2 ##   ..$ Med : num [1:4] 5 3.4 1.5 0.2 ##   ..$ Mean: num [1:4] 5.006 3.428 1.462 0.246 ##   ..$ Q3  : num [1:4] 5.2 3.68 1.58 0.3 ##   ..$ Max : num [1:4] 5.8 4.4 1.9 0.6 ##   ..$ sd  : num [1:4] 0.352 0.379 0.174 0.105 ##   ..$ IQR : num [1:4] 0.4 0.475 0.175 0.1 ##  $ Species: versicolor (n=50):'data.frame':  4 obs. of  8 variables: ##   ..$ Min : num [1:4] 4.9 2 3 1 ##   ..$ Q1  : num [1:4] 5.6 2.52 4 1.2 ##   ..$ Med : num [1:4] 5.9 2.8 4.35 1.3 ##   ..$ Mean: num [1:4] 5.94 2.77 4.26 1.33 ##   ..$ Q3  : num [1:4] 6.3 3 4.6 1.5 ##   ..$ Max : num [1:4] 7 3.4 5.1 1.8 ##   ..$ sd  : num [1:4] 0.516 0.314 0.47 0.198 ##   ..$ IQR : num [1:4] 0.7 0.475 0.6 0.3 ##  $ Species: virginica (n=50) :'data.frame':  4 obs. of  8 variables: ##   ..$ Min : num [1:4] 4.9 2.2 4.5 1.4 ##   ..$ Q1  : num [1:4] 6.23 2.8 5.1 1.8 ##   ..$ Med : num [1:4] 6.5 3 5.55 2 ##   ..$ Mean: num [1:4] 6.59 2.97 5.55 2.03 ##   ..$ Q3  : num [1:4] 6.9 3.18 5.88 2.3 ##   ..$ Max : num [1:4] 7.9 3.8 6.9 2.5 ##   ..$ sd  : num [1:4] 0.636 0.322 0.552 0.275 ##   ..$ IQR : num [1:4] 0.675 0.375 0.775 0.5 ##  $ tests                     :'data.frame':  4 obs. of  2 variables: ##   ..$ p   : num [1:4] 8.92e-22 1.57e-14 4.80e-29 3.26e-29 ##   ..$ test: chr [1:4] \"kruskal.test\" \"kruskal.test\" \"kruskal.test\" \"kruskal.test\" ##  - attr(*, \"class\")= chr \"desctable\" # With pander output mtcars %>%   group_by(cyl) %>%   desctable() %>%   pander() # With datatable output iris %>%   group_by(Petal.Length > 5) %>%   desctable() %>%   datatable() mtcars %>%   dplyr::mutate(am = factor(am, labels = c(\"Automatic\", \"Manual\"))) %>%   group_by(vs, am, cyl) %>%   desctable() %>%   datatable()"},{"path":"/articles/desctable_deprecated.html","id":"advanced-usage-1","dir":"Articles","previous_headings":"Comparative tables","what":"Advanced usage","title":"desctable usage vignette (deprecated)","text":"desctable automatically chooses statistical functions none provided, using following algorithm: variable factor, use fisher.test grouping factor one level, use provided .test (nothing) variable presents homoskedasticity (p value var.test > .1) normality distribution groups, use t.test(var.equal = T) variable present homoskedasticity (p value var.test < .1) normality distribution groups, use t.test(var.equal = F) else use wilcox.test variable presents homoskedasticity (p value bartlett.test > .1) normality distribution groups, use oneway.test(var.equal = T) variable present homoskedasticity (p value bartlett.test < .1) normality distribution groups, use oneway.test(var.equal = F) else use kruskal.test can specify statistical test functions tests argument. argument can either : function automatic selection appropriate statistical test functions, depending data named list statistical test functions Please note statistical test functions must given formulas capture name test display table. purrr style formulas also actepted, statistical functions. also allows specify optional arguments functions, go around non-standard test functions (see Statistical test functions).","code":""},{"path":"/articles/desctable_deprecated.html","id":"automatic-function-1","dir":"Articles","previous_headings":"Comparative tables > Advanced usage","what":"Automatic function","title":"desctable usage vignette (deprecated)","text":"default value tests argument tests_auto, provided package. can also provide automatic function, needs accept variable grouping factor arguments, return single-term formula containing statistical test function. function used every variable every grouping factor determine appropriate test.  reference, body tests_auto function package:","code":"# Strictly equivalent to iris %>% group_by(Species) %>% desctable() %>% datatable() iris %>%   group_by(Species) %>%   desctable(tests = tests_auto) %>%   datatable() ## function (var, grp)  ## { ##     grp <- factor(grp) ##     if (nlevels(grp) < 2)  ##         ~no.test ##     else if (is.factor(var)) { ##         if (tryCatch(is.numeric(fisher.test(var ~ grp)$p.value),  ##             error = function(e) F))  ##             ~fisher.test ##         else ~chisq.test ##     } ##     else if (nlevels(grp) == 2)  ##         ~wilcox.test ##     else ~kruskal.test ## } ## <bytecode: 0x55651e04dc10> ## <environment: namespace:desctable>"},{"path":"/articles/desctable_deprecated.html","id":"statistical-test-functions","dir":"Articles","previous_headings":"Comparative tables > Advanced usage","what":"Statistical test functions","title":"desctable usage vignette (deprecated)","text":"can provide named list statistical functions, mechanism bit different stats argument. list must contain either .auto .default. .auto needs automatic function, tests_auto. used default variables select test .default needs single-term formula containing statistical test function used variables can also provide overrides use specific tests specific variables. done using list items named variable containing single-term formula function.  ’s example purrr style function:  statistical functions, statistical test function defined R can used. conditions function accepts formula (variable ~ grouping_variable) first positional argument (case tests, like t.test), returns object p.value element. Several convenience function provided: formula versions chisq.test fisher.test using generic S3 methods (thus behavior standard calls chisq.test fisher.test modified), ANOVA, partial application oneway.test parameter var.equal = T.","code":"iris %>%   group_by(Petal.Length > 5) %>%   desctable(tests = list(.auto   = tests_auto,                          Species = ~chisq.test)) %>%   datatable() mtcars %>%   dplyr::mutate(am = factor(am, labels = c(\"Automatic\", \"Manual\"))) %>%   group_by(am) %>%   desctable(tests = list(.default = ~wilcox.test,                          mpg      = ~t.test)) %>%   datatable() iris %>%   group_by(Petal.Length > 5) %>%   desctable(tests = list(.auto = tests_auto,                          Petal.Width = ~oneway.test(., var.equal = T))) ##                       Petal.Length > 5: FALSE (n=108) / N ## 1        Sepal.Length                                 108 ## 2         Sepal.Width                                 108 ## 3        Petal.Length                                 108 ## 4         Petal.Width                                 108 ## 5             Species                                 108 ## 6     Species: setosa                                  50 ## 7 Species: versicolor                                  49 ## 8  Species: virginica                                   9 ##   Petal.Length > 5: FALSE (n=108) / % Petal.Length > 5: FALSE (n=108) / Min ## 1                                  NA                                   4.3 ## 2                                  NA                                   2.0 ## 3                                  NA                                   1.0 ## 4                                  NA                                   0.1 ## 5                                  NA                                    NA ## 6                           46.296296                                    NA ## 7                           45.370370                                    NA ## 8                            8.333333                                    NA ##   Petal.Length > 5: FALSE (n=108) / Q1 Petal.Length > 5: FALSE (n=108) / Med ## 1                                  5.0                                   5.5 ## 2                                  2.8                                   3.0 ## 3                                  1.5                                   3.5 ## 4                                  0.2                                   1.0 ## 5                                   NA                                    NA ## 6                                   NA                                    NA ## 7                                   NA                                    NA ## 8                                   NA                                    NA ##   Petal.Length > 5: FALSE (n=108) / Mean Petal.Length > 5: FALSE (n=108) / Q3 ## 1                              5.5018519                                  6.0 ## 2                              3.0666667                                  3.4 ## 3                              3.0074074                                  4.5 ## 4                              0.8638889                                  1.4 ## 5                                     NA                                   NA ## 6                                     NA                                   NA ## 7                                     NA                                   NA ## 8                                     NA                                   NA ##   Petal.Length > 5: FALSE (n=108) / Max Petal.Length > 5: FALSE (n=108) / sd ## 1                                   7.0                            0.6386290 ## 2                                   4.4                            0.4800701 ## 3                                   5.0                            1.4885673 ## 4                                   2.0                            0.6110292 ## 5                                    NA                                   NA ## 6                                    NA                                   NA ## 7                                    NA                                   NA ## 8                                    NA                                   NA ##   Petal.Length > 5: FALSE (n=108) / IQR Petal.Length > 5: TRUE (n=42) / N ## 1                                   1.0                                42 ## 2                                   0.6                                42 ## 3                                   3.0                                42 ## 4                                   1.2                                42 ## 5                                    NA                                42 ## 6                                    NA                                 0 ## 7                                    NA                                 1 ## 8                                    NA                                41 ##   Petal.Length > 5: TRUE (n=42) / % Petal.Length > 5: TRUE (n=42) / Min ## 1                                NA                                 5.8 ## 2                                NA                                 2.5 ## 3                                NA                                 5.1 ## 4                                NA                                 1.4 ## 5                                NA                                  NA ## 6                          0.000000                                  NA ## 7                          2.380952                                  NA ## 8                         97.619048                                  NA ##   Petal.Length > 5: TRUE (n=42) / Q1 Petal.Length > 5: TRUE (n=42) / Med ## 1                              6.325                                 6.7 ## 2                              2.800                                 3.0 ## 3                              5.300                                 5.6 ## 4                              1.825                                 2.1 ## 5                                 NA                                  NA ## 6                                 NA                                  NA ## 7                                 NA                                  NA ## 8                                 NA                                  NA ##   Petal.Length > 5: TRUE (n=42) / Mean Petal.Length > 5: TRUE (n=42) / Q3 ## 1                             6.721429                              7.175 ## 2                             3.033333                              3.200 ## 3                             5.688095                              5.975 ## 4                             2.061905                              2.300 ## 5                                   NA                                 NA ## 6                                   NA                                 NA ## 7                                   NA                                 NA ## 8                                   NA                                 NA ##   Petal.Length > 5: TRUE (n=42) / Max Petal.Length > 5: TRUE (n=42) / sd ## 1                                 7.9                          0.5748958 ## 2                                 3.8                          0.2968671 ## 3                                 6.9                          0.4919857 ## 4                                 2.5                          0.2802023 ## 5                                  NA                                 NA ## 6                                  NA                                 NA ## 7                                  NA                                 NA ## 8                                  NA                                 NA ##   Petal.Length > 5: TRUE (n=42) / IQR    tests / p ## 1                               0.850 1.553676e-15 ## 2                               0.400 6.927432e-01 ## 3                               0.675 2.076978e-21 ## 4                               0.475 3.982443e-24 ## 5                                  NA 2.453675e-26 ## 6                                  NA           NA ## 7                                  NA           NA ## 8                                  NA           NA ##                    tests / test ## 1                   wilcox.test ## 2                   wilcox.test ## 3                   wilcox.test ## 4 oneway.test(., var.equal = T) ## 5                   fisher.test ## 6                          <NA> ## 7                          <NA> ## 8                          <NA>"},{"path":[]},{"path":[]},{"path":"/articles/tips.html","id":"label-variables","dir":"Articles","previous_headings":"","what":"Label variables","title":"desctable tips","text":"can define labels variables using .labels argument desc_table can see CARBURATOR instead carb, variables need label, unused labels discarded.","code":"labels <- c(mpg   = \"Miles/(US) gallon\",             cyl   = \"Number of cylinders\",             disp  = \"Displacement (cu.in.)\",             hp    = \"Gross horsepower\",             drat  = \"Rear axle ratio\",             wt    = \"Weight (1000 lbs)\",             qsec  = \"1/4 mile time\",             vs    = \"Engine\",             am    = \"Transmission\",             gear  = \"Number of forward gears\",             CARBURATOR = \"Number of carburetors\")  mtcars %>%   desc_table(.labels = labels) %>%   desc_output(\"DT\")"},{"path":"/articles/tips.html","id":"default-statistics","dir":"Articles","previous_headings":"","what":"Default statistics","title":"desctable tips","text":"desc_table chooses statistics way: always show N = length show \"%\" = percent least factor show min, max, Q1, Q3, median, mean, sd, IQR least numeric","code":""},{"path":"/articles/tips.html","id":"defining-your-own-default-statistics","dir":"Articles","previous_headings":"","what":"Defining your own default statistics","title":"desctable tips","text":"can define automatic statistic function using .auto argument desc_table. function accept one argument, table choose statistics (case grouped dataframe subtables passed function). return list statistics. code stats_auto, default value .auto","code":"stats_auto <- function(data) {   data %>%     lapply(is.numeric) %>%     unlist() %>%     any -> numeric    data %>%     lapply(is.factor) %>%     unlist() %>%     any() -> fact    stats <- list(\"Min\"  = min,                 \"Q1\"   = ~quantile(., .25),                 \"Med\"  = stats::median,                 \"Mean\" = mean,                 \"Q3\"   = ~quantile(., .75),                 \"Max\"  = max,                 \"sd\"   = stats::sd,                 \"IQR\"  = IQR)    if (fact & numeric)     c(list(\"N\" = length,            \"%\" = percent),       stats)   else if (fact & !numeric)     list(\"N\" = length,          \"%\" = percent)   else if (!fact & numeric)     stats }"},{"path":"/articles/tips.html","id":"reuse-a-list-of-defined-statistics","dir":"Articles","previous_headings":"","what":"Reuse a list of defined statistics","title":"desctable tips","text":"often reuse statistics multiple tables don’t want repeat , can splice list desc_table using rlang::!!! operator splicing, stats need explicitly named can also define “dumb” automatic function","code":"stats = list(N = length,              Mean = mean,              SD = sd)  mtcars %>%   desc_table(!!!stats) %>%   desc_output(\"DT\") stats2 = list(N = length,               mean,               sd)  mtcars %>%   desc_table(!!!stats2) %>%   desc_output(\"DT\") default_stats <- function(data) {   list(N = length,        mean,        sd) }"},{"path":"/articles/tips.html","id":"default-statistical-tests","dir":"Articles","previous_headings":"","what":"Default statistical tests","title":"desctable tips","text":"desc_table chooses statistical tests way: fisher.test fails, fallback chisq.test wilcoxon.test two groups kruskal.test two groups","code":""},{"path":"/articles/tips.html","id":"defining-your-own-default-statistical-tests","dir":"Articles","previous_headings":"","what":"Defining your own default statistical tests","title":"desctable tips","text":"can define automatic statistic function using .auto argument desc_tests. function accept two arguments, variable compare grouping variable, return statistical test accepts formula argument returns object p.value element. code tests_auto, default value .auto can also provide default statistical test using .default argument Note named tests, necessary prepend test name tilde (~). can still choose individual tests define either .auto .default test Note .default test provided, .auto ignored.","code":"tests_auto <- function(var, grp) {   grp <- factor(grp)    if (nlevels(grp) < 2)     ~no.test   else if (is.factor(var)) {     if (tryCatch(is.numeric(fisher.test(var ~ grp)$p.value), error = function(e) F))       ~fisher.test     else       ~chisq.test   } else if (nlevels(grp) == 2)     ~wilcox.test   else     ~kruskal.test } mtcars %>%   group_by(am) %>%   desc_table(mean, sd) %>%   desc_tests(.default = ~t.test) %>%   desc_output(\"DT\") mtcars %>%   group_by(am) %>%   desc_table(mean, sd, median, IQR) %>%   desc_tests(.default = ~t.test, carb = ~wilcox.test) %>%   desc_output(\"DT\")"},{"path":"/articles/tips.html","id":"output-options","dir":"Articles","previous_headings":"","what":"Output options","title":"desctable tips","text":"can set number significant digits display digits argument. p values truncated 1E-digits. additional argument given desc_output carried output function","code":"iris %>%   group_by(Species) %>%   desc_table(mean, sd) %>%   desc_tests() %>%   desc_output(\"DT\", digits = 10) iris %>%   group_by(Species) %>%   desc_table(mean, sd) %>%   desc_output(\"DT\", filter = \"top\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maxime Wack. Author, maintainer. Adrien Boukobza. Author. Yihui Xie. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wack M, Boukobza (2022). desctable: Produce Descriptive Comparative Tables Easily. R package version 0.3.0, https://desctable.github.io.","code":"@Manual{,   title = {desctable: Produce Descriptive and Comparative Tables Easily},   author = {Maxime Wack and Adrien Boukobza},   year = {2022},   note = {R package version 0.3.0},   url = {https://desctable.github.io}, }"},{"path":"/index.html","id":"desctable","dir":"","previous_headings":"","what":"Produce Descriptive and Comparative Tables Easily","title":"Produce Descriptive and Comparative Tables Easily","text":"Warning existing usersThis version introduces new API make creation tables flexible. old API still present deprecated mode. See roadmap , website new usage. Suggestions change welcome !","code":""},{"path":"/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Produce Descriptive and Comparative Tables Easily","text":"Desctable aims simple expressive interface building statistical tables R.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Produce Descriptive and Comparative Tables Easily","text":"Install CRAN install development version github ","code":"install.packages(\"desctable\") devtools::install_github(\"desctable/desctable\")"},{"path":"/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic usage","title":"Produce Descriptive and Comparative Tables Easily","text":"Load package Simply apply desc_table dataframe grouped dataframe get statistical table Declare statistics want see, give name choice Create comparative tables, compute statistical tests output pander crisp markdown rendering! Read vignette !","code":"library(desctable) iris %>%   desc_table() ##                   Variables   N        % Min  Q1  Med     Mean  Q3 Max ## 1              Sepal.Length 150       NA 4.3 5.1 5.80 5.843333 6.4 7.9 ## 2               Sepal.Width 150       NA 2.0 2.8 3.00 3.057333 3.3 4.4 ## 3              Petal.Length 150       NA 1.0 1.6 4.35 3.758000 5.1 6.9 ## 4               Petal.Width 150       NA 0.1 0.3 1.30 1.199333 1.8 2.5 ## 5               **Species** 150       NA  NA  NA   NA       NA  NA  NA ## 6     **Species**: *setosa*  50 33.33333  NA  NA   NA       NA  NA  NA ## 7 **Species**: *versicolor*  50 33.33333  NA  NA   NA       NA  NA  NA ## 8  **Species**: *virginica*  50 33.33333  NA  NA   NA       NA  NA  NA ##          sd IQR ## 1 0.8280661 1.3 ## 2 0.4358663 0.5 ## 3 1.7652982 3.5 ## 4 0.7622377 1.5 ## 5        NA  NA ## 6        NA  NA ## 7        NA  NA ## 8        NA  NA iris %>%   desc_table(\"N\" = length,              \"%\" = percent,              mean,              sd) ##                   Variables   N        %     mean        sd ## 1              Sepal.Length 150       NA 5.843333 0.8280661 ## 2               Sepal.Width 150       NA 3.057333 0.4358663 ## 3              Petal.Length 150       NA 3.758000 1.7652982 ## 4               Petal.Width 150       NA 1.199333 0.7622377 ## 5               **Species** 150       NA       NA        NA ## 6     **Species**: *setosa*  50 33.33333       NA        NA ## 7 **Species**: *versicolor*  50 33.33333       NA        NA ## 8  **Species**: *virginica*  50 33.33333       NA        NA mtcars %>%   dplyr::mutate(cyl = factor(cyl),                 vs = factor(vs, labels = c(\"V-shaped\", \"straight\")),                 am = factor(am, labels = c(\"automatic\", \"manual\"))) %>%   group_by(am) %>%   desc_table(N = length,              \"%\" = percent,              \"Median\" = median,              IQR) %>%   desc_tests(vs = ~chisq.test) %>%   desc_output(\"pander\")"},{"path":"/reference/ANOVA.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper for oneway.test(var.equal = T) — ANOVA","title":"Wrapper for oneway.test(var.equal = T) — ANOVA","text":"Wrapper oneway.test(var.equal = T)","code":""},{"path":"/reference/ANOVA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper for oneway.test(var.equal = T) — ANOVA","text":"","code":"ANOVA(formula)"},{"path":"/reference/ANOVA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper for oneway.test(var.equal = T) — ANOVA","text":"formula anova formula (variable ~ grouping variable)","code":""},{"path":[]},{"path":"/reference/IQR.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the inter-quartile range — IQR","title":"Return the inter-quartile range — IQR","text":"Safe version IQR statify","code":""},{"path":"/reference/IQR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the inter-quartile range — IQR","text":"","code":"IQR(x)"},{"path":"/reference/IQR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the inter-quartile range — IQR","text":"x vector","code":""},{"path":"/reference/IQR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the inter-quartile range — IQR","text":"IQR","code":""},{"path":"/reference/as.data.frame.desctable.html","id":null,"dir":"Reference","previous_headings":"","what":"As.data.frame method for desctable — as.data.frame.desctable","title":"As.data.frame method for desctable — as.data.frame.desctable","text":".data.frame method desctable","code":""},{"path":"/reference/as.data.frame.desctable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"As.data.frame method for desctable — as.data.frame.desctable","text":"","code":"# S3 method for desctable as.data.frame(x, ...)"},{"path":"/reference/as.data.frame.desctable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"As.data.frame method for desctable — as.data.frame.desctable","text":"x desctable ... Additional .data.frame parameters","code":""},{"path":"/reference/as.data.frame.desctable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"As.data.frame method for desctable — as.data.frame.desctable","text":"flat dataframe","code":""},{"path":"/reference/chisq.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Pearson's Chi-squared Test for Count Data — chisq.test","title":"Pearson's Chi-squared Test for Count Data — chisq.test","text":"chisq.test performs chi-squared contingency table tests goodness--fit tests, added method formulas.","code":""},{"path":"/reference/chisq.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pearson's Chi-squared Test for Count Data — chisq.test","text":"","code":"chisq.test(x, y, correct, p, rescale.p, simulate.p.value, B)  # S3 method for default chisq.test(   x,   y = NULL,   correct = TRUE,   p = rep(1/length(x), length(x)),   rescale.p = FALSE,   simulate.p.value = FALSE,   B = 2000 )  # S3 method for formula chisq.test(   x,   y = NULL,   correct = T,   p = rep(1/length(x), length(x)),   rescale.p = F,   simulate.p.value = F,   B = 2000 )"},{"path":"/reference/chisq.test.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Pearson's Chi-squared Test for Count Data — chisq.test","text":"code Monte Carlo simulation C translation Fortran algorithm Patefield (1981).","code":""},{"path":"/reference/chisq.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pearson's Chi-squared Test for Count Data — chisq.test","text":"x numeric vector, matrix, formula form lhs ~ rhs lhs rhs factors. x y can also factors. y numeric vector; ignored x matrix formula. x factor, y factor length. correct logical indicating whether apply continuity     correction computing test statistic 2 2 tables: one     half subtracted \\(|O - E|\\) differences; however,     correction bigger differences .  correction     done simulate.p.value = TRUE. p vector probabilities length x.     error given entry p negative. rescale.p logical scalar; TRUE p rescaled     (necessary) sum 1.  rescale.p FALSE,     p sum 1, error given. simulate.p.value logical indicating whether compute     p-values Monte Carlo simulation. B integer specifying number replicates used     Monte Carlo test.","code":""},{"path":"/reference/chisq.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pearson's Chi-squared Test for Count Data — chisq.test","text":"list class \"htest\" containing following components: statistic: value chi-squared test statistic. parameter: degrees freedom approximate chi-squared           distribution test statistic, NA p-value           computed Monte Carlo simulation.  p.value: p-value test.   method: character string indicating type test performed,           whether Monte Carlo simulation continuity correction           used. data.name: character string giving name(s) data. observed: observed counts. expected: expected counts null hypothesis. residuals: Pearson residuals, ‘(observed - expected) /           sqrt(expected)’.   stdres: standardized residuals, (observed - expected) / sqrt(V),           V residual cell variance (Agresti, 2007,           section 2.4.5 case x matrix, ‘n * p * (1           - p)’ otherwise).","code":""},{"path":"/reference/chisq.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pearson's Chi-squared Test for Count Data — chisq.test","text":"x matrix one row column, x vector y given, _goodness--fit test_ performed (x treated one-dimensional contingency table).  entries x must non-negative integers.  case, hypothesis tested whether population probabilities equal p, equal p given. x matrix least two rows columns, taken two-dimensional contingency table: entries x must non-negative integers.  Otherwise, x y must vectors factors length; cases missing values removed, objects coerced factors, contingency table computed .  Pearson's chi-squared test performed null hypothesis joint distribution cell counts 2-dimensional contingency table product row column marginals. simulate.p.value FALSE, p-value computed asymptotic chi-squared distribution test statistic; continuity correction used 2--2 case (correct TRUE, default).  Otherwise p-value computed Monte Carlo test (Hope, 1968) B replicates. contingency table case simulation done random sampling set contingency tables given marginals, works marginals strictly positive. Continuity correction never used, statistic quoted without .  Note usual sampling situation assumed chi-squared test rather Fisher's exact test. goodness--fit case simulation done random sampling discrete distribution specified p, sample size n = sum(x).  simulation done R may slow.","code":""},{"path":"/reference/chisq.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pearson's Chi-squared Test for Count Data — chisq.test","text":"Hope, . C. . (1968) simplified Monte Carlo significance test procedure.  _J. Roy, Statist. Soc. B_ *30*, 582-598. Patefield, W. M. (1981) Algorithm AS159.  efficient method generating r x c tables given row column totals. _Applied Statistics_ *30*, 91-97. Agresti, . (2007) _An Introduction Categorical Data Analysis, 2nd ed._, New York: John Wiley & Sons.  Page 38.","code":""},{"path":[]},{"path":"/reference/chisq.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pearson's Chi-squared Test for Count Data — chisq.test","text":"","code":"if (FALSE) { ## From Agresti(2007) p.39 M <- as.table(rbind(c(762, 327, 468), c(484, 239, 477))) dimnames(M) <- list(gender = c(\"F\", \"M\"),                     party = c(\"Democrat\",\"Independent\", \"Republican\")) (Xsq <- chisq.test(M))  # Prints test summary Xsq$observed   # observed counts (same as M) Xsq$expected   # expected counts under the null Xsq$residuals  # Pearson residuals Xsq$stdres     # standardized residuals   ## Effect of simulating p-values x <- matrix(c(12, 5, 7, 7), ncol = 2) chisq.test(x)$p.value           # 0.4233 chisq.test(x, simulate.p.value = TRUE, B = 10000)$p.value                                 # around 0.29!  ## Testing for population probabilities ## Case A. Tabulated data x <- c(A = 20, B = 15, C = 25) chisq.test(x) chisq.test(as.table(x))             # the same x <- c(89,37,30,28,2) p <- c(40,20,20,15,5) try( chisq.test(x, p = p)                # gives an error ) chisq.test(x, p = p, rescale.p = TRUE)                                 # works p <- c(0.40,0.20,0.20,0.19,0.01)                                 # Expected count in category 5                                 # is 1.86 < 5 ==> chi square approx. chisq.test(x, p = p)            #               maybe doubtful, but is ok! chisq.test(x, p = p, simulate.p.value = TRUE)  ## Case B. Raw data x <- trunc(5 * runif(100)) chisq.test(table(x))            # NOT 'chisq.test(x)'!  ### }"},{"path":"/reference/datatable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an HTML table widget using the DataTables library — datatable","title":"Create an HTML table widget using the DataTables library — datatable","text":"function creates HTML widget display rectangular data (matrix data frame) using JavaScript library DataTables, method desctable objects.","code":""},{"path":"/reference/datatable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an HTML table widget using the DataTables library — datatable","text":"","code":"datatable(data, ...)  # S3 method for default datatable(   data,   options = list(),   class = \"display\",   callback = DT::JS(\"return table;\"),   caption = NULL,   filter = c(\"none\", \"bottom\", \"top\"),   escape = TRUE,   style = \"default\",   width = NULL,   height = NULL,   elementId = NULL,   fillContainer = getOption(\"DT.fillContainer\", NULL),   autoHideNavigation = getOption(\"DT.autoHideNavigation\", NULL),   selection = c(\"multiple\", \"single\", \"none\"),   extensions = list(),   plugins = NULL,   ... )  # S3 method for desctable datatable(   data,   options = list(paging = F, info = F, search = list(), dom = \"Brtip\", fixedColumns =     T, fixedHeader = T, buttons = c(\"copy\", \"excel\")),   class = \"display\",   callback = DT::JS(\"return table;\"),   caption = NULL,   filter = c(\"none\", \"bottom\", \"top\"),   escape = FALSE,   style = \"default\",   width = NULL,   height = NULL,   elementId = NULL,   fillContainer = getOption(\"DT.fillContainer\", NULL),   autoHideNavigation = getOption(\"DT.autoHideNavigation\", NULL),   selection = c(\"multiple\", \"single\", \"none\"),   extensions = c(\"FixedHeader\", \"FixedColumns\", \"Buttons\"),   plugins = NULL,   rownames = F,   digits = 2,   ... )"},{"path":"/reference/datatable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an HTML table widget using the DataTables library — datatable","text":"data data object (either matrix data frame) ... arguments passed format. options list initialization options (see https://datatables.net/reference/option/); character options wrapped JS() treated literal JavaScript code instead normal character strings; can also set options globally via options(DT.options = list(...)), global options merged options argument set class CSS class(es) table; see https://datatables.net/manual/styling/classes callback body JavaScript callback function argument table applied DataTables instance (.e. table) caption table caption; character vector tag object generated htmltools::tags$caption() filter whether/use column filters; none: filters; bottom/top: put column filters bottom/top table; range sliders used filter numeric/date/time columns, select lists used factor columns, text input boxes used character columns; want control styles filters, can provide list argument form list(position = 'top', clear = TRUE, plain = FALSE), clear indicates whether want clear buttons input boxes, plain means want use Bootstrap form styles plain text input styles text input boxes escape whether escape HTML entities table: TRUE means escape whole table, FALSE means escape ; alternatively, can specify numeric column indices column names indicate columns escape, e.g. 1:5 (first 5 columns), c(1, 3, 4), c(-1, -3) (columns except first third), c('Species', 'Sepal.Length'); since row names take first column display, add numeric column indices one using rownames style either 'auto', 'default', 'bootstrap', 'bootstrap4'. 'auto', **bslib** theme currently active, bootstrap styling used way \"just works\" active theme. Otherwise, DataTables 'default' styling used. set explicitly 'bootstrap' 'bootstrap4', one must take care ensure Bootstrap's HTML dependencies (well Bootswatch themes, desired) included page. Note, set explicitly, user's responsibility ensure one unique `style` value used page, multiple DT tables exist, different styling resources may conflict . width Width/Height pixels (optional, defaults automatic sizing) height Width/Height pixels (optional, defaults automatic sizing) elementId id widget (random string default). fillContainer TRUE configure table automatically fill containing element. table fit fully container vertical /horizontal scrolling table cells occur. autoHideNavigation TRUE automatically hide navigational UI (display table body) number total records less page size. Note, works client-side processing mode `pageLength` option provided explicitly. selection row/column selection mode (single multiple selection disable selection) table widget rendered Shiny app; alternatively, can use list form list(mode = 'multiple', selected = c(1, 3, 8), target = 'row', selectable = c(-2, -3)) pre-select rows control selectable range; element target list can 'column' enable column selection, 'row+column' make possible select rows columns (click footer select columns), 'cell' select cells. See details section info. extensions character vector names DataTables extensions (https://datatables.net/extensions/index) plugins character vector names DataTables plug-ins (https://rstudio.github.io/DT/plugins.html).  Note plugins supported DT package can used . can see available plugins calling DT:::available_plugins() rownames TRUE (show row names) FALSE (hide row names) character vector row names; default, row names displayed first column table exist (NULL) digits desired number digits decimal     point (format = \"f\") significant digits     (format = \"g\", = \"e\" = \"fg\"). Default: 2 integer, 4 real numbers.  less 0,     C default 6 digits used.  specified 50, 50     used warning unless format = \"f\"     limited typically 324. (15--21 digits need     accurate, depending OS compiler used.  limit     just precaution segfaults underlying C runtime.)","code":""},{"path":"/reference/datatable.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create an HTML table widget using the DataTables library — datatable","text":"recommended escape table content security reasons (e.g. XSS attacks) using function Shiny dynamic web applications.","code":""},{"path":"/reference/datatable.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create an HTML table widget using the DataTables library — datatable","text":"See https://rstudio.github.io/DT/ full documentation.","code":""},{"path":"/reference/datatable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an HTML table widget using the DataTables library — datatable","text":"","code":"library(DT) #>  #> Attaching package: ‘DT’ #> The following object is masked from ‘package:desctable’: #>  #>     datatable  # see the package vignette for examples and the link to website vignette('DT', package = 'DT') #> starting httpd help server ... #>  done  # some boring edge cases for testing purposes m = matrix(nrow = 0, ncol = 5, dimnames = list(NULL, letters[1:5])) datatable(m)  # zero rows  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[],[],[],[],[]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>a<\\/th>\\n      <th>b<\\/th>\\n      <th>c<\\/th>\\n      <th>d<\\/th>\\n      <th>e<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}datatable(as.data.frame(m))  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[],[],[],[],[],[]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>a<\\/th>\\n      <th>b<\\/th>\\n      <th>c<\\/th>\\n      <th>d<\\/th>\\n      <th>e<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]} m = matrix(1, dimnames = list(NULL, 'a')) datatable(m)  # one row and one column  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[1]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>a<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}datatable(as.data.frame(m))  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\"],[1]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>a<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":1},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]} m = data.frame(a = 1, b = 2, c = 3) datatable(m)  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\"],[1],[2],[3]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>a<\\/th>\\n      <th>b<\\/th>\\n      <th>c<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}datatable(as.matrix(m))  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[1],[2],[3]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th>a<\\/th>\\n      <th>b<\\/th>\\n      <th>c<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[0,1,2]}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]} # dates datatable(data.frame(   date = seq(as.Date(\"2015-01-01\"), by = \"day\", length.out = 5), x = 1:5 ))  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\"],[\"2015-01-01\",\"2015-01-02\",\"2015-01-03\",\"2015-01-04\",\"2015-01-05\"],[1,2,3,4,5]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>date<\\/th>\\n      <th>x<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":2},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}datatable(data.frame(x = Sys.Date()))  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\"],[\"2022-03-23\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>x<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}datatable(data.frame(x = Sys.time()))  {\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\"],[\"2022-03-23T21:29:14Z\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>x<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]} ###"},{"path":"/reference/desc_output.html","id":null,"dir":"Reference","previous_headings":"","what":"desc_output — desc_output","title":"desc_output — desc_output","text":"Output desctable desired target format","code":""},{"path":"/reference/desc_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"desc_output — desc_output","text":"","code":"desc_output(desctable, target = c(\"df\", \"pander\", \"DT\"), digits = 2, ...)"},{"path":"/reference/desc_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"desc_output — desc_output","text":"desctable desctable output target desired target. One \"df\", \"pander\", \"DT\". digits number digits display. p values simplified 1E-digits ... arguments pass data.frame, pander::pander, DT::datatable","code":""},{"path":"/reference/desc_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"desc_output — desc_output","text":"output object (corresponding side effect)","code":""},{"path":"/reference/desc_output.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"desc_output — desc_output","text":"Output simple grouped desctable different formats. Currently available formats data.frame (\"df\") pander (\"pander\") datatable (\"DT\") numerical values rounded digits argument. statistical tests presents, p values 1E-digits replaced \"≤ 1E-digits\" (eg. \"≤ 0.01\" values 0.01 digits = 2)","code":""},{"path":[]},{"path":"/reference/desc_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a statistics table — desc_table","title":"Generate a statistics table — desc_table","text":"Generate statistics table chosen statistical functions, nested called grouped dataframe.","code":""},{"path":"/reference/desc_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a statistics table — desc_table","text":"","code":"desc_table(data, ..., .auto, .labels)  # S3 method for default desc_table(data, ..., .auto, .labels)  # S3 method for data.frame desc_table(data, ..., .labels = NULL, .auto = stats_auto)  # S3 method for grouped_df desc_table(data, ..., .auto = stats_auto, .labels = NULL)"},{"path":"/reference/desc_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a statistics table — desc_table","text":"data dataframe analyze ... list named statistics apply element dataframe, function returning list named statistics .auto function automatically determine appropriate statistics .labels named character vector variable labels","code":""},{"path":"/reference/desc_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a statistics table — desc_table","text":"simple grouped descriptive table","code":""},{"path":"/reference/desc_table.html","id":"stats","dir":"Reference","previous_headings":"","what":"Stats","title":"Generate a statistics table — desc_table","text":"statistical functions use table passed additional arguments. argument named (eg. N = length) name used column title instead function name (, N instead length). R function can statistical function, long returns one value applied vector, many values levels factor, plus one. Users can also use purrr::map-like formulas quick anonymous functions (eg. Q1 = ~ quantile(., .25) get first quantile column named Q1) statistical function given desc_table, .auto argument used provide function automatically determines appropriate statistical functions use based contents table.","code":""},{"path":"/reference/desc_table.html","id":"labels","dir":"Reference","previous_headings":"","what":"Labels","title":"Generate a statistics table — desc_table","text":".labels named character vector provide \"pretty\" labels variables. given, variable names label replaced corresponding label. variables need label, labels non-existing variables ignored. labels must given form c(unquoted_variable_name = \"label\")","code":""},{"path":"/reference/desc_table.html","id":"output","dir":"Reference","previous_headings":"","what":"Output","title":"Generate a statistics table — desc_table","text":"output either dataframe case simple descriptive table, nested dataframes case comparative table.","code":""},{"path":[]},{"path":"/reference/desc_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a statistics table — desc_table","text":"","code":"iris %>%   desc_table() #>                   Variables   N        % Min  Q1  Med     Mean  Q3 Max #> 1              Sepal.Length 150       NA 4.3 5.1 5.80 5.843333 6.4 7.9 #> 2               Sepal.Width 150       NA 2.0 2.8 3.00 3.057333 3.3 4.4 #> 3              Petal.Length 150       NA 1.0 1.6 4.35 3.758000 5.1 6.9 #> 4               Petal.Width 150       NA 0.1 0.3 1.30 1.199333 1.8 2.5 #> 5               **Species** 150       NA  NA  NA   NA       NA  NA  NA #> 6     **Species**: *setosa*  50 33.33333  NA  NA   NA       NA  NA  NA #> 7 **Species**: *versicolor*  50 33.33333  NA  NA   NA       NA  NA  NA #> 8  **Species**: *virginica*  50 33.33333  NA  NA   NA       NA  NA  NA #>          sd IQR #> 1 0.8280661 1.3 #> 2 0.4358663 0.5 #> 3 1.7652982 3.5 #> 4 0.7622377 1.5 #> 5        NA  NA #> 6        NA  NA #> 7        NA  NA #> 8        NA  NA  # Does the same as stats_auto here iris %>%   desc_table(\"N\"      = length,              \"Min\"    = min,              \"Q1\"     = ~quantile(., .25),              \"Med\"    = median,              \"Mean\"   = mean,              \"Q3\"     = ~quantile(., .75),              \"Max\"    = max,              \"sd\"     = sd,              \"IQR\"    = IQR) #>                   Variables   N Min  Q1  Med     Mean  Q3 Max        sd IQR #> 1              Sepal.Length 150 4.3 5.1 5.80 5.843333 6.4 7.9 0.8280661 1.3 #> 2               Sepal.Width 150 2.0 2.8 3.00 3.057333 3.3 4.4 0.4358663 0.5 #> 3              Petal.Length 150 1.0 1.6 4.35 3.758000 5.1 6.9 1.7652982 3.5 #> 4               Petal.Width 150 0.1 0.3 1.30 1.199333 1.8 2.5 0.7622377 1.5 #> 5               **Species** 150  NA  NA   NA       NA  NA  NA        NA  NA #> 6     **Species**: *setosa*  50  NA  NA   NA       NA  NA  NA        NA  NA #> 7 **Species**: *versicolor*  50  NA  NA   NA       NA  NA  NA        NA  NA #> 8  **Species**: *virginica*  50  NA  NA   NA       NA  NA  NA        NA  NA  # With grouping on a factor iris %>%   group_by(Species) %>%   desc_table(.auto = stats_auto) #> # A tibble: 3 × 4 #> # Groups:   Species [3] #>   Species    data              .stats       .vars        #>   <fct>      <list>            <list>       <list>       #> 1 setosa     <tibble [50 × 4]> <df [4 × 8]> <df [4 × 1]> #> 2 versicolor <tibble [50 × 4]> <df [4 × 8]> <df [4 × 1]> #> 3 virginica  <tibble [50 × 4]> <df [4 × 8]> <df [4 × 1]>"},{"path":"/reference/desc_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Add tests to a desc_table — desc_tests","title":"Add tests to a desc_table — desc_tests","text":"Add test statistics grouped desc_table, tests specified variable = test.","code":""},{"path":"/reference/desc_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add tests to a desc_table — desc_tests","text":"","code":"desc_tests(desctable, .auto = tests_auto, .default = NULL, ...)"},{"path":"/reference/desc_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add tests to a desc_table — desc_tests","text":"desctable desc_table .auto function automatically determine appropriate tests .default default fallback test ... list statistical tests associated variable names","code":""},{"path":"/reference/desc_tests.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add tests to a desc_table — desc_tests","text":"desc_table tests","code":""},{"path":"/reference/desc_tests.html","id":"tests","dir":"Reference","previous_headings":"","what":"Tests","title":"Add tests to a desc_table — desc_tests","text":"statistical test functions use table passed additional named arguments. Tests must preceded formula tilde (~). name = ~test apply test test variable name. R test function can used, long returns object containing p.value element, case tests returning object class  htest. Users can also use purrr::map-like formulas quick anonymous functions (eg. ~ t.test(., var.equal = T) compute t test without Welch correction.","code":""},{"path":[]},{"path":"/reference/desc_tests.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add tests to a desc_table — desc_tests","text":"","code":"iris %>%   group_by(Species) %>%   desc_table() %>%   desc_tests(Sepal.Length = ~kruskal.test,              Sepal.Width  = ~oneway.test,              Petal.Length = ~oneway.test(., var.equal = T),              Petal.Length = ~oneway.test(., var.equal = F)) #> # A tibble: 3 × 5 #> # Groups:   Species [3] #>   Species    data              .stats       .vars        .tests       #>   <fct>      <list>            <list>       <list>       <list>       #> 1 setosa     <tibble [50 × 4]> <df [4 × 8]> <df [4 × 1]> <df [4 × 2]> #> 2 versicolor <tibble [50 × 4]> <df [4 × 8]> <df [4 × 1]> <df [4 × 2]> #> 3 virginica  <tibble [50 × 4]> <df [4 × 8]> <df [4 × 1]> <df [4 × 2]>"},{"path":"/reference/desctable.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a statistics table — desctable","title":"Generate a statistics table — desctable","text":"Generate statistics table chosen statistical functions, tests given \"grouped\" dataframe.","code":""},{"path":"/reference/desctable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a statistics table — desctable","text":"","code":"desctable(data, stats, tests, labels)  # S3 method for default desctable(data, stats = stats_auto, tests, labels = NULL)  # S3 method for grouped_df desctable(data, stats = stats_auto, tests = tests_auto, labels = NULL)"},{"path":"/reference/desctable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a statistics table — desctable","text":"data dataframe analyze stats list named statistics apply element dataframe, function returning list named statistics tests list statistical tests use calling desctable grouped_df labels named character vector labels use instead variable names","code":""},{"path":"/reference/desctable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a statistics table — desctable","text":"desctable object, prints table statistics variables","code":""},{"path":"/reference/desctable.html","id":"labels","dir":"Reference","previous_headings":"","what":"Labels","title":"Generate a statistics table — desctable","text":"labels option named character vector used make table prettier. given, variable names label replaced corresponding label. variables need label, labels non-existing variables ignored. labels must given form c(unquoted_variable_name = \"label\")","code":""},{"path":"/reference/desctable.html","id":"stats","dir":"Reference","previous_headings":"","what":"Stats","title":"Generate a statistics table — desctable","text":"stats can function takes dataframe returns list statistical functions use. stats can also named list statistical functions, purrr::map like formulas. names used column names resulting table. element list function, used -stats.","code":""},{"path":"/reference/desctable.html","id":"tests","dir":"Reference","previous_headings":"","what":"Tests","title":"Generate a statistics table — desctable","text":"tests can function takes variable grouping variable, returns appropriate statistical test use case. tests can also named list statistical test functions, associating name variable data test use specifically variable. test name must expressed single-term formula (e.g. ~t.test), purrr::map like formula (e.g. ~t.test(., var.equal = T)). specify tests variables: default test variables can defined name .default, automatic test can defined name .auto. data grouped dataframe (using group_by), subtables created statistic tests performed sub-group.","code":""},{"path":"/reference/desctable.html","id":"output","dir":"Reference","previous_headings":"","what":"Output","title":"Generate a statistics table — desctable","text":"output desctable object, list named dataframes can manipulated. Methods printing, using pander DT present. Printing reduces object dataframe.","code":""},{"path":[]},{"path":"/reference/desctable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a statistics table — desctable","text":"","code":"iris %>%   desctable() #> Warning: desctable is deprecated and will be removed in 1.0.0. #>  #> Please use the `desc_*` family of functions (`desc_table`, `desc_tests`, `desc_output`) #>                         N        % Min  Q1  Med     Mean  Q3 Max        sd IQR #> 1        Sepal.Length 150       NA 4.3 5.1 5.80 5.843333 6.4 7.9 0.8280661 1.3 #> 2         Sepal.Width 150       NA 2.0 2.8 3.00 3.057333 3.3 4.4 0.4358663 0.5 #> 3        Petal.Length 150       NA 1.0 1.6 4.35 3.758000 5.1 6.9 1.7652982 3.5 #> 4         Petal.Width 150       NA 0.1 0.3 1.30 1.199333 1.8 2.5 0.7622377 1.5 #> 5             Species 150       NA  NA  NA   NA       NA  NA  NA        NA  NA #> 6     Species: setosa  50 33.33333  NA  NA   NA       NA  NA  NA        NA  NA #> 7 Species: versicolor  50 33.33333  NA  NA   NA       NA  NA  NA        NA  NA #> 8  Species: virginica  50 33.33333  NA  NA   NA       NA  NA  NA        NA  NA  # Does the same as stats_auto here iris %>%   desctable(stats = list(\"N\"      = length,                          \"Mean\"   = ~ if (is.normal(.)) mean(.),                          \"sd\"     = ~ if (is.normal(.)) sd(.),                          \"Med\"    = stats::median,                          \"IQR\"    = ~ if(!is.factor(.)) IQR(.))) #> Warning: desctable is deprecated and will be removed in 1.0.0. #>  #> Please use the `desc_*` family of functions (`desc_table`, `desc_tests`, `desc_output`) #>                         N     Mean        sd  Med IQR #> 1        Sepal.Length 150       NA        NA 5.80 1.3 #> 2         Sepal.Width 150 3.057333 0.4358663 3.00 0.5 #> 3        Petal.Length 150       NA        NA 4.35 3.5 #> 4         Petal.Width 150       NA        NA 1.30 1.5 #> 5             Species 150       NA        NA   NA  NA #> 6     Species: setosa  50       NA        NA   NA  NA #> 7 Species: versicolor  50       NA        NA   NA  NA #> 8  Species: virginica  50       NA        NA   NA  NA  # With labels mtcars %>% desctable(labels = c(hp  = \"Horse Power\",                                 cyl = \"Cylinders\",                                 mpg = \"Miles per gallon\")) #> Warning: desctable is deprecated and will be removed in 1.0.0. #>  #> Please use the `desc_*` family of functions (`desc_table`, `desc_tests`, `desc_output`) #>                        Min        Q1     Med       Mean     Q3     Max #> 1  Miles per gallon 10.400  15.42500  19.200  20.090625  22.80  33.900 #> 2         Cylinders  4.000   4.00000   6.000   6.187500   8.00   8.000 #> 3              disp 71.100 120.82500 196.300 230.721875 326.00 472.000 #> 4       Horse Power 52.000  96.50000 123.000 146.687500 180.00 335.000 #> 5              drat  2.760   3.08000   3.695   3.596563   3.92   4.930 #> 6                wt  1.513   2.58125   3.325   3.217250   3.61   5.424 #> 7              qsec 14.500  16.89250  17.710  17.848750  18.90  22.900 #> 8                vs  0.000   0.00000   0.000   0.437500   1.00   1.000 #> 9                am  0.000   0.00000   0.000   0.406250   1.00   1.000 #> 10             gear  3.000   3.00000   4.000   3.687500   4.00   5.000 #> 11             carb  1.000   2.00000   2.000   2.812500   4.00   8.000 #>             sd       IQR #> 1    6.0269481   7.37500 #> 2    1.7859216   4.00000 #> 3  123.9386938 205.17500 #> 4   68.5628685  83.50000 #> 5    0.5346787   0.84000 #> 6    0.9784574   1.02875 #> 7    1.7869432   2.00750 #> 8    0.5040161   1.00000 #> 9    0.4989909   1.00000 #> 10   0.7378041   1.00000 #> 11   1.6152000   2.00000  # With grouping on a factor iris %>%   group_by(Species) %>%   desctable(stats = stats_default) #> Warning: desctable is deprecated and will be removed in 1.0.0. #>  #> Please use the `desc_*` family of functions (`desc_table`, `desc_tests`, `desc_output`) #>                Species: setosa (n=50) / N Species: setosa (n=50) / % #> 1 Sepal.Length                         50                         NA #> 2  Sepal.Width                         50                         NA #> 3 Petal.Length                         50                         NA #> 4  Petal.Width                         50                         NA #>   Species: setosa (n=50) / Mean Species: setosa (n=50) / sd #> 1                         5.006                   0.3524897 #> 2                         3.428                   0.3790644 #> 3                            NA                          NA #> 4                            NA                          NA #>   Species: setosa (n=50) / Med Species: setosa (n=50) / IQR #> 1                          5.0                        0.400 #> 2                          3.4                        0.475 #> 3                          1.5                        0.175 #> 4                          0.2                        0.100 #>   Species: versicolor (n=50) / N Species: versicolor (n=50) / % #> 1                             50                             NA #> 2                             50                             NA #> 3                             50                             NA #> 4                             50                             NA #>   Species: versicolor (n=50) / Mean Species: versicolor (n=50) / sd #> 1                             5.936                       0.5161711 #> 2                             2.770                       0.3137983 #> 3                             4.260                       0.4699110 #> 4                                NA                              NA #>   Species: versicolor (n=50) / Med Species: versicolor (n=50) / IQR #> 1                             5.90                            0.700 #> 2                             2.80                            0.475 #> 3                             4.35                            0.600 #> 4                             1.30                            0.300 #>   Species: virginica (n=50) / N Species: virginica (n=50) / % #> 1                            50                            NA #> 2                            50                            NA #> 3                            50                            NA #> 4                            50                            NA #>   Species: virginica (n=50) / Mean Species: virginica (n=50) / sd #> 1                            6.588                      0.6358796 #> 2                            2.974                      0.3224966 #> 3                            5.552                      0.5518947 #> 4                               NA                             NA #>   Species: virginica (n=50) / Med Species: virginica (n=50) / IQR    tests / p #> 1                            6.50                           0.675 8.918734e-22 #> 2                            3.00                           0.375 1.569282e-14 #> 3                            5.55                           0.775 4.803974e-29 #> 4                            2.00                           0.500 3.261796e-29 #>   tests / test #> 1 kruskal.test #> 2 kruskal.test #> 3 kruskal.test #> 4 kruskal.test  # With nested grouping, on arbitrary variables mtcars %>%   group_by(vs, cyl) %>%   desctable() #> Warning: desctable is deprecated and will be removed in 1.0.0. #>  #> Please use the `desc_*` family of functions (`desc_table`, `desc_tests`, `desc_output`) #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #> Warning: cannot compute exact p-value with ties #>        vs: 0 (n=18) / cyl: 4 (n=1) / Min vs: 0 (n=18) /  / Q1 #> 1  mpg                             26.00                26.00 #> 2 disp                            120.30               120.30 #> 3   hp                             91.00                91.00 #> 4 drat                              4.43                 4.43 #> 5   wt                              2.14                 2.14 #> 6 qsec                             16.70                16.70 #> 7   am                              1.00                 1.00 #> 8 gear                              5.00                 5.00 #> 9 carb                              2.00                 2.00 #>   vs: 0 (n=18) /  / Med vs: 0 (n=18) /  / Mean vs: 0 (n=18) /  / Q3 #> 1                 26.00                  26.00                26.00 #> 2                120.30                 120.30               120.30 #> 3                 91.00                  91.00                91.00 #> 4                  4.43                   4.43                 4.43 #> 5                  2.14                   2.14                 2.14 #> 6                 16.70                  16.70                16.70 #> 7                  1.00                   1.00                 1.00 #> 8                  5.00                   5.00                 5.00 #> 9                  2.00                   2.00                 2.00 #>   vs: 0 (n=18) /  / Max vs: 0 (n=18) /  / sd vs: 0 (n=18) /  / IQR #> 1                 26.00                   NA                     0 #> 2                120.30                   NA                     0 #> 3                 91.00                   NA                     0 #> 4                  4.43                   NA                     0 #> 5                  2.14                   NA                     0 #> 6                 16.70                   NA                     0 #> 7                  1.00                   NA                     0 #> 8                  5.00                   NA                     0 #> 9                  2.00                   NA                     0 #>   vs: 0 (n=18) / cyl: 6 (n=3) / Min vs: 0 (n=18) /  / Q1 vs: 0 (n=18) /  / Med #> 1                             19.70               20.350                 21.00 #> 2                            145.00              152.500                160.00 #> 3                            110.00              110.000                110.00 #> 4                              3.62                3.760                  3.90 #> 5                              2.62                2.695                  2.77 #> 6                             15.50               15.980                 16.46 #> 7                              1.00                1.000                  1.00 #> 8                              4.00                4.000                  4.00 #> 9                              4.00                4.000                  4.00 #>   vs: 0 (n=18) /  / Mean vs: 0 (n=18) /  / Q3 vs: 0 (n=18) /  / Max #> 1              20.566667              21.0000                21.000 #> 2             155.000000             160.0000               160.000 #> 3             131.666667             142.5000               175.000 #> 4               3.806667               3.9000                 3.900 #> 5               2.755000               2.8225                 2.875 #> 6              16.326667              16.7400                17.020 #> 7               1.000000               1.0000                 1.000 #> 8               4.333333               4.5000                 5.000 #> 9               4.666667               5.0000                 6.000 #>   vs: 0 (n=18) /  / sd vs: 0 (n=18) /  / IQR vs: 0 (n=18) / cyl: 8 (n=14) / Min #> 1            0.7505553                0.6500                              10.40 #> 2            8.6602540                7.5000                             275.80 #> 3           37.5277675               32.5000                             150.00 #> 4            0.1616581                0.1400                               2.76 #> 5            0.1281601                0.1275                               3.17 #> 6            0.7687219                0.7600                              14.50 #> 7            0.0000000                0.0000                               0.00 #> 8            0.5773503                0.5000                               3.00 #> 9            1.1547005                1.0000                               2.00 #>   vs: 0 (n=18) /  / Q1 vs: 0 (n=18) /  / Med vs: 0 (n=18) /  / Mean #> 1              14.4000                15.200             15.1000000 #> 2             301.7500               350.500            353.1000000 #> 3             176.2500               192.500            209.2142857 #> 4               3.0700                 3.115              3.2292857 #> 5               3.5325                 3.755              3.9992143 #> 6              16.0975                17.175             16.7721429 #> 7               0.0000                 0.000              0.1428571 #> 8               3.0000                 3.000              3.2857143 #> 9               2.2500                 3.500              3.5000000 #>   vs: 0 (n=18) /  / Q3 vs: 0 (n=18) /  / Max vs: 0 (n=18) /  / sd #> 1             16.25000                19.200            2.5600481 #> 2            390.00000               472.000           67.7713236 #> 3            241.25000               335.000           50.9768855 #> 4              3.22500                 4.220            0.3723618 #> 5              4.01375                 5.424            0.7594047 #> 6             17.55500                18.000            1.1960138 #> 7              0.00000                 1.000            0.3631365 #> 8              3.00000                 5.000            0.7262730 #> 9              4.00000                 8.000            1.5566236 #>   vs: 0 (n=18) /  / IQR vs: 0 (n=18) / tests / p vs: 0 (n=18) /  / test #> 1               1.85000               0.01124786           kruskal.test #> 2              88.25000               0.01109171           kruskal.test #> 3              65.00000               0.02510507           kruskal.test #> 4               0.15500               0.03286104           kruskal.test #> 5               0.48125               0.01135263           kruskal.test #> 6               1.45750               0.47244498           kruskal.test #> 7               0.00000               0.00777266           kruskal.test #> 8               0.00000               0.01810659           kruskal.test #> 9               1.75000               0.12211556           kruskal.test #>   vs: 1 (n=14) / cyl: 4 (n=10) / Min vs: 1 (n=14) /  / Q1 vs: 1 (n=14) /  / Med #> 1                             21.400              22.8000                25.850 #> 2                             71.100              78.7750               101.550 #> 3                             52.000              65.2500                79.500 #> 4                              3.690               3.7900                 4.000 #> 5                              1.513               1.8600                 2.260 #> 6                             16.900              18.6025                19.185 #> 7                              0.000               0.2500                 1.000 #> 8                              3.000               4.0000                 4.000 #> 9                              1.000               1.0000                 1.500 #>   vs: 1 (n=14) /  / Mean vs: 1 (n=14) /  / Q3 vs: 1 (n=14) /  / Max #> 1                26.7300             30.40000                 33.90 #> 2               103.6200            120.77500                146.70 #> 3                81.8000             96.50000                113.00 #> 4                 4.0350              4.10250                  4.93 #> 5                 2.3003              2.70125                  3.19 #> 6                19.3810             19.97500                 22.90 #> 7                 0.7000              1.00000                  1.00 #> 8                 4.0000              4.00000                  5.00 #> 9                 1.5000              2.00000                  2.00 #>   vs: 1 (n=14) /  / sd vs: 1 (n=14) /  / IQR vs: 1 (n=14) / cyl: 6 (n=4) / Min #> 1            4.7481107               7.60000                            17.800 #> 2           27.8246414              42.00000                           167.600 #> 3           21.8723570              31.25000                           105.000 #> 4            0.3642115               0.31250                             2.760 #> 5            0.5982073               0.84125                             3.215 #> 6            1.5553453               1.37250                            18.300 #> 7            0.4830459               0.75000                             0.000 #> 8            0.4714045               0.00000                             3.000 #> 9            0.5270463               1.00000                             1.000 #>   vs: 1 (n=14) /  / Q1 vs: 1 (n=14) /  / Med vs: 1 (n=14) /  / Mean #> 1             18.02500                 18.65               19.12500 #> 2            167.60000                196.30              204.55000 #> 3            108.75000                116.50              115.25000 #> 4              3.00000                  3.50                3.42000 #> 5              3.38375                  3.44                3.38875 #> 6             18.75000                 19.17               19.21500 #> 7              0.00000                  0.00                0.00000 #> 8              3.00000                  3.50                3.50000 #> 9              1.00000                  2.50                2.50000 #>   vs: 1 (n=14) /  / Q3 vs: 1 (n=14) /  / Max vs: 1 (n=14) /  / sd #> 1               19.750                 21.40            1.6317169 #> 2              233.250                258.00           44.7426344 #> 3              123.000                123.00            9.1787799 #> 4                3.920                  3.92            0.5919459 #> 5                3.445                  3.46            0.1162164 #> 6               19.635                 20.22            0.8159044 #> 7                0.000                  0.00            0.0000000 #> 8                4.000                  4.00            0.5773503 #> 9                4.000                  4.00            1.7320508 #>   vs: 1 (n=14) /  / IQR vs: 1 (n=14) / tests / p vs: 1 (n=14) /  / test #> 1               1.72500              0.007019704            wilcox.test #> 2              65.65000              0.005766846            wilcox.test #> 3              14.25000              0.019356258            wilcox.test #> 4               0.92000              0.135397657            wilcox.test #> 5               0.06125              0.005766846            wilcox.test #> 6               0.88500              1.000000000            wilcox.test #> 7               0.00000              0.027884340            wilcox.test #> 8               1.00000              0.129468688            wilcox.test #> 9               3.00000              0.485044622            wilcox.test  # With grouping on a condition, and choice of tests iris %>%   group_by(Petal.Length > 5) %>%   desctable(tests = list(.auto = tests_auto, Species = ~chisq.test)) #> Warning: desctable is deprecated and will be removed in 1.0.0. #>  #> Please use the `desc_*` family of functions (`desc_table`, `desc_tests`, `desc_output`) #>                       Petal.Length > 5: FALSE (n=108) / N #> 1        Sepal.Length                                 108 #> 2         Sepal.Width                                 108 #> 3        Petal.Length                                 108 #> 4         Petal.Width                                 108 #> 5             Species                                 108 #> 6     Species: setosa                                  50 #> 7 Species: versicolor                                  49 #> 8  Species: virginica                                   9 #>   Petal.Length > 5: FALSE (n=108) / % Petal.Length > 5: FALSE (n=108) / Min #> 1                                  NA                                   4.3 #> 2                                  NA                                   2.0 #> 3                                  NA                                   1.0 #> 4                                  NA                                   0.1 #> 5                                  NA                                    NA #> 6                           46.296296                                    NA #> 7                           45.370370                                    NA #> 8                            8.333333                                    NA #>   Petal.Length > 5: FALSE (n=108) / Q1 Petal.Length > 5: FALSE (n=108) / Med #> 1                                  5.0                                   5.5 #> 2                                  2.8                                   3.0 #> 3                                  1.5                                   3.5 #> 4                                  0.2                                   1.0 #> 5                                   NA                                    NA #> 6                                   NA                                    NA #> 7                                   NA                                    NA #> 8                                   NA                                    NA #>   Petal.Length > 5: FALSE (n=108) / Mean Petal.Length > 5: FALSE (n=108) / Q3 #> 1                              5.5018519                                  6.0 #> 2                              3.0666667                                  3.4 #> 3                              3.0074074                                  4.5 #> 4                              0.8638889                                  1.4 #> 5                                     NA                                   NA #> 6                                     NA                                   NA #> 7                                     NA                                   NA #> 8                                     NA                                   NA #>   Petal.Length > 5: FALSE (n=108) / Max Petal.Length > 5: FALSE (n=108) / sd #> 1                                   7.0                            0.6386290 #> 2                                   4.4                            0.4800701 #> 3                                   5.0                            1.4885673 #> 4                                   2.0                            0.6110292 #> 5                                    NA                                   NA #> 6                                    NA                                   NA #> 7                                    NA                                   NA #> 8                                    NA                                   NA #>   Petal.Length > 5: FALSE (n=108) / IQR Petal.Length > 5: TRUE (n=42) / N #> 1                                   1.0                                42 #> 2                                   0.6                                42 #> 3                                   3.0                                42 #> 4                                   1.2                                42 #> 5                                    NA                                42 #> 6                                    NA                                 0 #> 7                                    NA                                 1 #> 8                                    NA                                41 #>   Petal.Length > 5: TRUE (n=42) / % Petal.Length > 5: TRUE (n=42) / Min #> 1                                NA                                 5.8 #> 2                                NA                                 2.5 #> 3                                NA                                 5.1 #> 4                                NA                                 1.4 #> 5                                NA                                  NA #> 6                          0.000000                                  NA #> 7                          2.380952                                  NA #> 8                         97.619048                                  NA #>   Petal.Length > 5: TRUE (n=42) / Q1 Petal.Length > 5: TRUE (n=42) / Med #> 1                              6.325                                 6.7 #> 2                              2.800                                 3.0 #> 3                              5.300                                 5.6 #> 4                              1.825                                 2.1 #> 5                                 NA                                  NA #> 6                                 NA                                  NA #> 7                                 NA                                  NA #> 8                                 NA                                  NA #>   Petal.Length > 5: TRUE (n=42) / Mean Petal.Length > 5: TRUE (n=42) / Q3 #> 1                             6.721429                              7.175 #> 2                             3.033333                              3.200 #> 3                             5.688095                              5.975 #> 4                             2.061905                              2.300 #> 5                                   NA                                 NA #> 6                                   NA                                 NA #> 7                                   NA                                 NA #> 8                                   NA                                 NA #>   Petal.Length > 5: TRUE (n=42) / Max Petal.Length > 5: TRUE (n=42) / sd #> 1                                 7.9                          0.5748958 #> 2                                 3.8                          0.2968671 #> 3                                 6.9                          0.4919857 #> 4                                 2.5                          0.2802023 #> 5                                  NA                                 NA #> 6                                  NA                                 NA #> 7                                  NA                                 NA #> 8                                  NA                                 NA #>   Petal.Length > 5: TRUE (n=42) / IQR    tests / p tests / test #> 1                               0.850 1.553676e-15  wilcox.test #> 2                               0.400 6.927432e-01  wilcox.test #> 3                               0.675 2.076978e-21  wilcox.test #> 4                               0.475 1.577769e-19  wilcox.test #> 5                                  NA 2.707889e-24   chisq.test #> 6                                  NA           NA         <NA> #> 7                                  NA           NA         <NA> #> 8                                  NA           NA         <NA>"},{"path":"/reference/fisher.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher's Exact Test for Count Data — fisher.test","title":"Fisher's Exact Test for Count Data — fisher.test","text":"Performs Fisher's exact test testing null independence rows columns contingency table fixed marginals, formula expression.","code":""},{"path":"/reference/fisher.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher's Exact Test for Count Data — fisher.test","text":"","code":"fisher.test(   x,   y,   workspace,   hybrid,   control,   or,   alternative,   conf.int,   conf.level,   simulate.p.value,   B )  # S3 method for default fisher.test(x, ...)  # S3 method for formula fisher.test(   x,   y = NULL,   workspace = 200000,   hybrid = F,   control = list(),   or = 1,   alternative = \"two.sided\",   conf.int = T,   conf.level = 0.95,   simulate.p.value = F,   B = 2000 )"},{"path":"/reference/fisher.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher's Exact Test for Count Data — fisher.test","text":"x either two-dimensional contingency table matrix form, factor object, formula form lhs ~ rhs lhs rhs factors. y factor object; ignored x matrix formula. workspace integer specifying size workspace     used network algorithm.  units 4 bytes.  used     non-simulated p-values larger \\(2 \\times 2\\) tables.     Since R version 3.5.0, also increases internal stack size     allows larger problems solved, however sometimes needing     hours.  cases, simulate.p.values=TRUE may     reasonable. hybrid logical. used larger \\(2 \\times 2\\)     tables, cases indicates whether exact probabilities     (default) hybrid approximation thereof computed. control list named components low level algorithm     control.  present one used \"mult\", positive     integer \\(\\ge 2\\) default 30 used larger     \\(2 \\times 2\\) tables.  says many times much     space allocated paths keys: see file     fexact.c sources package. hypothesized odds ratio.  used     \\(2 \\times 2\\) case. alternative indicates alternative hypothesis must     one \"two.sided\", \"greater\" \"less\".     can specify just initial letter.  used     \\(2 \\times 2\\) case. conf.int logical indicating confidence interval     odds ratio \\(2 \\times 2\\) table     computed (returned). conf.level confidence level returned confidence     interval.  used \\(2 \\times 2\\) case     conf.int = TRUE. simulate.p.value logical indicating whether compute     p-values Monte Carlo simulation, larger \\(2 \\times       2\\) tables. B integer specifying number replicates used     Monte Carlo test. ... additional params feed original fisher.test","code":""},{"path":"/reference/fisher.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fisher's Exact Test for Count Data — fisher.test","text":"list class \"htest\" containing following components: p.value: p-value test. conf.int: confidence interval odds ratio.  present           2 2 case argument conf.int = TRUE. estimate: estimate odds ratio.  Note _conditional_           Maximum Likelihood Estimate (MLE) rather           unconditional MLE (sample odds ratio) used.            present 2 2 case. null.value: odds ratio null, .  present 2           2 case. alternative: character string describing alternative hypothesis. method: character string \"Fisher's Exact Test Count Data\". data.name: character string giving names data.","code":""},{"path":"/reference/fisher.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fisher's Exact Test for Count Data — fisher.test","text":"x matrix, taken two-dimensional contingency table, hence entries nonnegative integers. Otherwise, x y must vectors length. Incomplete cases removed, vectors coerced factor objects, contingency table computed . 2 2 cases, p-values obtained directly using (central non-central) hypergeometric distribution. Otherwise, computations based C version FORTRAN subroutine FEXACT implements network developed Mehta Patel (1986) improved Clarkson, Fan Joe (1993).  FORTRAN code can obtained http://www.netlib.org/toms/643. Note fails (error message) entries table large.  (transposes table necessary rows columns.  One constraint product row marginals less 2^31 - 1.) 2 2 tables, null conditional independence equivalent hypothesis odds ratio equals one. Exact inference can based observing general, given marginal totals fixed, first element contingency table non-central hypergeometric distribution non-centrality parameter given odds ratio (Fisher, 1935). alternative one-sided test based odds ratio, alternative = \"greater\" test odds ratio bigger . Two-sided tests based probabilities tables, take extreme tables probabilities less equal observed table, p-value sum probabilities. larger 2 2 tables hybrid = TRUE, asymptotic chi-squared probabilities used ‘Cochran conditions’ satisfied, cell count zero, 80 exact calculation used. Simulation done conditional row column marginals, works marginals strictly positive.  (C translation algorithm Patefield (1981) used.)","code":""},{"path":"/reference/fisher.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fisher's Exact Test for Count Data — fisher.test","text":"Agresti, . (1990) _Categorical data analysis_.  New York: Wiley. Pages 59-66. Agresti, . (2002) _Categorical data analysis_. Second edition. New York: Wiley.  Pages 91-101. Fisher, R. . (1935) logic inductive inference.  _Journal Royal Statistical Society Series A_ *98*, 39-54. Fisher, R. . (1962) Confidence limits cross-product ratio. _Australian Journal Statistics_ *4*, 41. Fisher, R. . (1970) _Statistical Methods Research Workers._ Oliver & Boyd. Mehta, C. R. Patel, N. R. (1986) Algorithm 643. FEXACT: Fortran subroutine Fisher's exact test unordered r*c contingency tables.  _ACM Transactions Mathematical Software_, *12*, 154-161. Clarkson, D. B., Fan, Y. Joe, H. (1993) Remark Algorithm 643: FEXACT: Algorithm Performing Fisher's Exact Test r x c Contingency Tables.  _ACM Transactions Mathematical Software_, *19*, 484-488. Patefield, W. M. (1981) Algorithm AS159.  efficient method generating r x c tables given row column totals. _Applied Statistics_ *30*, 91-97.","code":""},{"path":[]},{"path":"/reference/fisher.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fisher's Exact Test for Count Data — fisher.test","text":"","code":"if (FALSE) { ## Agresti (1990, p. 61f; 2002, p. 91) Fisher's Tea Drinker ## A British woman claimed to be able to distinguish whether milk or ##  tea was added to the cup first.  To test, she was given 8 cups of ##  tea, in four of which milk was added first.  The null hypothesis ##  is that there is no association between the true order of pouring ##  and the woman's guess, the alternative that there is a positive ##  association (that the odds ratio is greater than 1). TeaTasting <- matrix(c(3, 1, 1, 3),        nrow = 2,        dimnames = list(Guess = c(\"Milk\", \"Tea\"),                        Truth = c(\"Milk\", \"Tea\"))) fisher.test(TeaTasting, alternative = \"greater\") ## => p = 0.2429, association could not be established  ## Fisher (1962, 1970), Criminal convictions of like-sex twins Convictions <- matrix(c(2, 10, 15, 3),        nrow = 2,        dimnames =        list(c(\"Dizygotic\", \"Monozygotic\"),             c(\"Convicted\", \"Not convicted\"))) Convictions fisher.test(Convictions, alternative = \"less\") fisher.test(Convictions, conf.int = FALSE) fisher.test(Convictions, conf.level = 0.95)$conf.int fisher.test(Convictions, conf.level = 0.99)$conf.int  ## A r x c table  Agresti (2002, p. 57) Job Satisfaction Job <- matrix(c(1,2,1,0, 3,3,6,1, 10,10,14,9, 6,7,12,11), 4, 4, dimnames = list(income = c(\"< 15k\", \"15-25k\", \"25-40k\", \"> 40k\"),                 satisfaction = c(\"VeryD\", \"LittleD\", \"ModerateS\", \"VeryS\"))) fisher.test(Job) fisher.test(Job, simulate.p.value = TRUE, B = 1e5)  ### }"},{"path":"/reference/flatten_desctable.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten a desctable to a dataframe recursively — flatten_desctable","title":"Flatten a desctable to a dataframe recursively — flatten_desctable","text":"Flatten desctable dataframe recursively","code":""},{"path":"/reference/flatten_desctable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten a desctable to a dataframe recursively — flatten_desctable","text":"","code":"flatten_desctable(desctable)"},{"path":"/reference/flatten_desctable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten a desctable to a dataframe recursively — flatten_desctable","text":"desctable desctable object","code":""},{"path":"/reference/flatten_desctable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten a desctable to a dataframe recursively — flatten_desctable","text":"flat dataframe","code":""},{"path":"/reference/head_dataframe.html","id":null,"dir":"Reference","previous_headings":"","what":"Build the header for dataframe — head_dataframe","title":"Build the header for dataframe — head_dataframe","text":"Build header dataframe","code":""},{"path":"/reference/head_dataframe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build the header for dataframe — head_dataframe","text":"","code":"head_dataframe(head)"},{"path":"/reference/head_dataframe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build the header for dataframe — head_dataframe","text":"head headerList object","code":""},{"path":"/reference/head_dataframe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build the header for dataframe — head_dataframe","text":"names vector","code":""},{"path":"/reference/head_datatable.html","id":null,"dir":"Reference","previous_headings":"","what":"Build the header for datatable — head_datatable","title":"Build the header for datatable — head_datatable","text":"Build header datatable","code":""},{"path":"/reference/head_datatable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build the header for datatable — head_datatable","text":"","code":"head_datatable(head)"},{"path":"/reference/head_datatable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build the header for datatable — head_datatable","text":"head headerList object","code":""},{"path":"/reference/head_datatable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build the header for datatable — head_datatable","text":"htmltools$tags object containing header","code":""},{"path":"/reference/head_pander.html","id":null,"dir":"Reference","previous_headings":"","what":"Build the header for pander — head_pander","title":"Build the header for pander — head_pander","text":"Build header pander","code":""},{"path":"/reference/head_pander.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build the header for pander — head_pander","text":"","code":"head_pander(head)"},{"path":"/reference/head_pander.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build the header for pander — head_pander","text":"head headerList object","code":""},{"path":"/reference/head_pander.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build the header for pander — head_pander","text":"names vector","code":""},{"path":"/reference/header.html","id":null,"dir":"Reference","previous_headings":"","what":"Build header — header","title":"Build header — header","text":"Take desctable object create suitable header mentionned output. Output can one \"pander\", \"datatable\", \"dataframe\".","code":""},{"path":"/reference/header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build header — header","text":"","code":"header(desctable, output = c(\"pander\", \"datatable\", \"dataframe\"))"},{"path":"/reference/header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build header — header","text":"desctable desctable object output output format header","code":""},{"path":"/reference/header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build header — header","text":"header object output format","code":""},{"path":"/reference/headerList.html","id":null,"dir":"Reference","previous_headings":"","what":"build a header list object — headerList","title":"build a header list object — headerList","text":"build header list object","code":""},{"path":"/reference/headerList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"build a header list object — headerList","text":"","code":"headerList(desctable)"},{"path":"/reference/headerList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"build a header list object — headerList","text":"desctable desctable","code":""},{"path":"/reference/headerList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"build a header list object — headerList","text":"nested list headers colspans","code":""},{"path":"/reference/insert.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert a vector y inside another vector x at position — insert","title":"Insert a vector y inside another vector x at position — insert","text":"vectors y list inserted positions respectively ** x[position] element x","code":""},{"path":"/reference/insert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert a vector y inside another vector x at position — insert","text":"","code":"insert(x, y, position)"},{"path":"/reference/insert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert a vector y inside another vector x at position — insert","text":"x vector inserted y vector list vectors insert x position position / vector positions insert vector(s) y vector x","code":""},{"path":"/reference/insert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert a vector y inside another vector x at position — insert","text":"combined vector","code":""},{"path":"/reference/is.normal.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if distribution is normal — is.normal","title":"Test if distribution is normal — is.normal","text":"Test distribution normal. condition normality length > 30 non-significant Shapiro-Wilks test p > .1","code":""},{"path":"/reference/is.normal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if distribution is normal — is.normal","text":"","code":"is.normal(x)"},{"path":"/reference/is.normal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if distribution is normal — is.normal","text":"x numerical vector","code":""},{"path":"/reference/is.normal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if distribution is normal — is.normal","text":"boolean","code":""},{"path":"/reference/no.test.html","id":null,"dir":"Reference","previous_headings":"","what":"No test — no.test","title":"No test — no.test","text":"empty test","code":""},{"path":"/reference/no.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"No test — no.test","text":"","code":"no.test(formula)"},{"path":"/reference/no.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"No test — no.test","text":"formula formula","code":""},{"path":"/reference/pander.desctable.html","id":null,"dir":"Reference","previous_headings":"","what":"Pander method for desctable — pander.desctable","title":"Pander method for desctable — pander.desctable","text":"Pander method output desctable","code":""},{"path":"/reference/pander.desctable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pander method for desctable — pander.desctable","text":"","code":"# S3 method for desctable pander(   x = NULL,   digits = 2,   justify = \"left\",   missing = \"\",   keep.line.breaks = T,   split.tables = Inf,   emphasize.rownames = F,   ... )"},{"path":"/reference/pander.desctable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pander method for desctable — pander.desctable","text":"x desctable digits passed format. Can vector specifying values column (length number columns). justify defines alignment cells passed format. Can left, right centre, latter can also spelled center. Defaults centre. Can abbreviated string consisting letters l, c r (e.g. 'lcr' instead c('left', 'centre', 'right'). missing string replace missing values keep.line.breaks (default: FALSE) keep remove line breaks cells table split.tables split wide tables separate tables. default value (80) suggests conventional number characters used line, feel free change (e.g. Inf disable feature) using VT100 terminal :) emphasize.rownames boolean (default: TRUE) row names highlighted ... unsupported extra arguments directly placed /dev/null","code":""},{"path":"/reference/pander.desctable.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pander method for desctable — pander.desctable","text":"Uses pandoc.table, default parameters (digits = 2, justify = \"left\", missing = \"\", keep.line.breaks = T, split.tables = Inf, emphasize.rownames = F), can override needed.","code":""},{"path":[]},{"path":"/reference/parse_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a formula — parse_formula","title":"Parse a formula — parse_formula","text":"Parse formula defining conditions pick stat/test","code":""},{"path":"/reference/parse_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a formula — parse_formula","text":"","code":"parse_formula(x, f)"},{"path":"/reference/parse_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a formula — parse_formula","text":"x variable test f formula parse","code":""},{"path":"/reference/parse_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a formula — parse_formula","text":"function use stat/test","code":""},{"path":"/reference/parse_formula.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parse a formula — parse_formula","text":"Parse formula defining conditions pick stat/test return function use. formula given form conditional ~ T | F conditions can nested conditional1 ~ (conditional2 ~ T | F) | F FALSE option can omitted, TRUE can replaced NA","code":""},{"path":"/reference/percent.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the percentages for the levels of a factor — percent","title":"Return the percentages for the levels of a factor — percent","text":"Return compatible vector length nlevels(x) + 1 print percentages level factor","code":""},{"path":"/reference/percent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the percentages for the levels of a factor — percent","text":"","code":"percent(x)"},{"path":"/reference/percent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the percentages for the levels of a factor — percent","text":"x factor","code":""},{"path":"/reference/percent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the percentages for the levels of a factor — percent","text":"nlevels(x) + 1 length vector percentages","code":""},{"path":"/reference/print.desctable.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for desctable — print.desctable","title":"Print method for desctable — print.desctable","text":"Print method desctable","code":""},{"path":"/reference/print.desctable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for desctable — print.desctable","text":"","code":"# S3 method for desctable print(x, ...)"},{"path":"/reference/print.desctable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for desctable — print.desctable","text":"x desctable ... Additional print parameters","code":""},{"path":"/reference/print.desctable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for desctable — print.desctable","text":"flat dataframe","code":""},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr %>%, group_by pander pander rlang !!!","code":""},{"path":"/reference/set_desctable_class.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the ","title":"Set the ","text":"Set \"desctable\" class passed object","code":""},{"path":"/reference/set_desctable_class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the ","text":"","code":"set_desctable_class(x)"},{"path":"/reference/set_desctable_class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the ","text":"x Object set \"desctable\" class ","code":""},{"path":"/reference/set_desctable_class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the ","text":"object class \"desctable\"","code":""},{"path":"/reference/statColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate one statistic for all variables — statColumn","title":"Generate one statistic for all variables — statColumn","text":"Use one stat function (made safe using statify) data produce single statistics column.","code":""},{"path":"/reference/statColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate one statistic for all variables — statColumn","text":"","code":"statColumn(stat, data)"},{"path":"/reference/statColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate one statistic for all variables — statColumn","text":"stat statistic use data dataframe apply statistic ","code":""},{"path":"/reference/statColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate one statistic for all variables — statColumn","text":"vector one statistic column","code":""},{"path":"/reference/statColumn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate one statistic for all variables — statColumn","text":"result either numeric vector, character vector content column made entirely numbers.","code":""},{"path":"/reference/statTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the table of all statistics for all variables — statTable","title":"Generate the table of all statistics for all variables — statTable","text":"stats list functions purrr::map like formulas, use . single function, use entire data argument produce list statistical functions use.","code":""},{"path":"/reference/statTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the table of all statistics for all variables — statTable","text":"","code":"statTable(data, stats)"},{"path":"/reference/statTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the table of all statistics for all variables — statTable","text":"data dataframe apply statistic stats list named statistics use","code":""},{"path":"/reference/statTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the table of all statistics for all variables — statTable","text":"dataframe statistics variables","code":""},{"path":"/reference/statify.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform any function into a valid stat function for the table — statify","title":"Transform any function into a valid stat function for the table — statify","text":"Transform function valid stat function table","code":""},{"path":"/reference/statify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform any function into a valid stat function for the table — statify","text":"","code":"statify(x, f)"},{"path":"/reference/statify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform any function into a valid stat function for the table — statify","text":"x vector f function try apply, formula combining two functions","code":""},{"path":"/reference/statify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform any function into a valid stat function for the table — statify","text":"results function applied vector, compatible format result table","code":""},{"path":"/reference/statify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform any function into a valid stat function for the table — statify","text":"NA values removed data Applying function numerical vector return one value Applying function factor return nlevels + 1 value, one value per factor level See parse_formula usage formulaes.","code":""},{"path":"/reference/stats_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a list of statistics to use in desctable — stats_auto","title":"Function to create a list of statistics to use in desctable — stats_auto","text":"function takes dataframe argument returns list statistcs form accepted desctable.","code":""},{"path":"/reference/stats_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a list of statistics to use in desctable — stats_auto","text":"","code":"stats_auto(data)"},{"path":"/reference/stats_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a list of statistics to use in desctable — stats_auto","text":"data dataframe apply statistic ","code":""},{"path":"/reference/stats_auto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a list of statistics to use in desctable — stats_auto","text":"list statistics use, assessed content dataframe","code":""},{"path":"/reference/stats_auto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to create a list of statistics to use in desctable — stats_auto","text":"can define automatic function, long takes dataframe argument returns list functions, formulas defining conditions use stat function.","code":""},{"path":"/reference/stats_default.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a list of default statistics — stats_default","title":"Define a list of default statistics — stats_default","text":"Define list default statistics","code":""},{"path":"/reference/stats_default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a list of default statistics — stats_default","text":"","code":"stats_default(data)  stats_normal(data)  stats_nonnormal(data)"},{"path":"/reference/stats_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a list of default statistics — stats_default","text":"data dataframe","code":""},{"path":"/reference/stats_default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a list of default statistics — stats_default","text":"list statistical functions","code":""},{"path":"/reference/subNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the subtables names — subNames","title":"Create the subtables names — subNames","text":"Create subtables names, factor: level (n=sub-group length)","code":""},{"path":"/reference/subNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the subtables names — subNames","text":"","code":"subNames(grp, df)"},{"path":"/reference/subNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the subtables names — subNames","text":"grp Grouping factor df Dataframe containing grouping factor","code":""},{"path":"/reference/subNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the subtables names — subNames","text":"character vector names subtables","code":""},{"path":"/reference/subTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a subtable in a grouped desctable — subTable","title":"Create a subtable in a grouped desctable — subTable","text":"Create subtable grouped desctable","code":""},{"path":"/reference/subTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a subtable in a grouped desctable — subTable","text":"","code":"subTable(df, stats, tests, grps)"},{"path":"/reference/subTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a subtable in a grouped desctable — subTable","text":"df Dataframe use stats Stats list/function use tests Tests list/function use grps List symbols grouping factors","code":""},{"path":"/reference/subTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a subtable in a grouped desctable — subTable","text":"nested list statTables testColumns","code":""},{"path":"/reference/testColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the pvalues column — testColumn","title":"Create the pvalues column — testColumn","text":"Create pvalues column","code":""},{"path":"/reference/testColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the pvalues column — testColumn","text":"","code":"testColumn(df, tests, grp)"},{"path":"/reference/testColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the pvalues column — testColumn","text":"df Dataframe use tests tests Test function list functions grp Grouping factor","code":""},{"path":"/reference/testColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the pvalues column — testColumn","text":"numeric vector pvalues","code":""},{"path":"/reference/testify.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform any test function into a valid test function for the table — testify","title":"Transform any test function into a valid test function for the table — testify","text":"Transform function valid test function table Applying function numerical vector return one value Applying function factor return nlevels + 1 value, one value per factor level","code":""},{"path":"/reference/testify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform any test function into a valid test function for the table — testify","text":"","code":"testify(x, f, group)"},{"path":"/reference/testify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform any test function into a valid test function for the table — testify","text":"x vector f function try apply, formula combining two functions group Grouping factor","code":""},{"path":"/reference/testify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform any test function into a valid test function for the table — testify","text":"results function applied vector, compatible format result table","code":""},{"path":"/reference/tests_auto.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to choose a statistical test — tests_auto","title":"Function to choose a statistical test — tests_auto","text":"function takes variable grouping variable arguments, returns statistcal test use, expressed single-term formula.","code":""},{"path":"/reference/tests_auto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to choose a statistical test — tests_auto","text":"","code":"tests_auto(var, grp)"},{"path":"/reference/tests_auto.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to choose a statistical test — tests_auto","text":"var variable test grp variable groups","code":""},{"path":"/reference/tests_auto.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to choose a statistical test — tests_auto","text":"statistical test function","code":""},{"path":"/reference/tests_auto.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Function to choose a statistical test — tests_auto","text":"function uses appropriate non-parametric tests depending number levels (wilcoxon.test two levels kruskal.test ), fisher.test fallback chisq.test error factors.","code":""},{"path":"/reference/varColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the variable column to display as row names — varColumn","title":"Generate the variable column to display as row names — varColumn","text":"Generates variable column. Replaces variable names label given named character vector labels, inserts levels factors.","code":""},{"path":"/reference/varColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the variable column to display as row names — varColumn","text":"","code":"varColumn(data, labels = NULL)"},{"path":"/reference/varColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the variable column to display as row names — varColumn","text":"data dataframe get names labels optional named character vector containing keypairs var = \"Label\"","code":""},{"path":"/reference/varColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the variable column to display as row names — varColumn","text":"dataframe one variable named \"Variables\", character vector variable names/labels levels","code":""},{"path":"/reference/varColumn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate the variable column to display as row names — varColumn","text":"labels option named character vector used make table prettier. given, variable names label replaced corresponding label. variables need label, labels non-existing variables ignored.","code":""},{"path":"/reference/which.desctable.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the object possibly a desctable? — which.desctable","title":"Is the object possibly a desctable? — which.desctable","text":"Check object produced desc_table. Return string: - simple - grouped FALSE desctable","code":""},{"path":"/reference/which.desctable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the object possibly a desctable? — which.desctable","text":"","code":"which.desctable(desctable)"},{"path":"/reference/which.desctable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the object possibly a desctable? — which.desctable","text":"desctable potential desctable check","code":""},{"path":"/reference/which.desctable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is the object possibly a desctable? — which.desctable","text":"type desctable FALSE","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"desctable 0.3.0","text":"NEW API: desctable now desc_table, desc_tests, desc_output New internal format: desctable uses dataframes list-columns internally instead nested lists New website pkgdown","code":""},{"path":"/news/index.html","id":"bugfix-0-3-0","dir":"Changelog","previous_headings":"","what":"Bugfix","title":"desctable 0.3.0","text":"Conditional formulas hard-deprecated 0.2.0, soft-deprecated.","code":""},{"path":[]},{"path":"/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"New features","title":"desctable 0.2.0","text":"Add support purrr::map-like formulas statistical test functions Conditional formulas deprecated 1.0. example, replace .normal ~ mean | median ~ (.normal(.)) mean(.) else median(.)","code":""},{"path":"/news/index.html","id":"desctable-019","dir":"Changelog","previous_headings":"","what":"desctable 0.1.9","title":"desctable 0.1.9","text":"CRAN release: 2020-10-16","code":""},{"path":"/news/index.html","id":"bugfixes-0-1-9","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"desctable 0.1.9","text":"Fix default options datatable output following DT update Fix pander export R ≥ 4.0.0","code":""},{"path":[]},{"path":"/news/index.html","id":"code-cleanup-0-1-8","dir":"Changelog","previous_headings":"","what":"Code cleanup","title":"desctable 0.1.8","text":"Use RStudio style guidelines code docs Use fewer tidyverse functions internally, drop purrr dependancy","code":""},{"path":"/news/index.html","id":"desctable-017","dir":"Changelog","previous_headings":"","what":"desctable 0.1.7","title":"desctable 0.1.7","text":"CRAN release: 2020-02-03","code":""},{"path":"/news/index.html","id":"code-cleanup-0-1-7","dir":"Changelog","previous_headings":"","what":"Code cleanup","title":"desctable 0.1.7","text":"Correct vignette README RStudio style guidelines","code":""},{"path":"/news/index.html","id":"desctable-016","dir":"Changelog","previous_headings":"","what":"desctable 0.1.6","title":"desctable 0.1.6","text":"CRAN release: 2019-04-01","code":""},{"path":"/news/index.html","id":"bugfixes-0-1-6","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"desctable 0.1.6","text":"Correct way re-export group_by %>%","code":""},{"path":[]},{"path":"/news/index.html","id":"bugfixes-0-1-4-5","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"desctable 0.1.4-5","text":"Documentation fix group_by import (dplyr 0.8) Correct description Dates","code":""},{"path":"/news/index.html","id":"desctable-013","dir":"Changelog","previous_headings":"","what":"desctable 0.1.3","title":"desctable 0.1.3","text":"CRAN release: 2018-07-11","code":""},{"path":"/news/index.html","id":"cran-publication-update-0-1-3","dir":"Changelog","previous_headings":"","what":"CRAN publication update","title":"desctable 0.1.3","text":"Add travis CI repo Add CRAN badge repo Correct typo README vignette Bugfix statistical function returns warning error Add NEWS file future releases Modify default auto statistics less automation Add dummy column name variable names column, make dplyr happy Enable character mixed columns Add CRAN mirror downloads badge repo","code":""},{"path":"/news/index.html","id":"desctable-012","dir":"Changelog","previous_headings":"","what":"desctable 0.1.2","title":"desctable 0.1.2","text":"CRAN release: 2018-05-27","code":""},{"path":"/news/index.html","id":"bugfix-0-1-2","dir":"Changelog","previous_headings":"","what":"Bugfix","title":"desctable 0.1.2","text":"Fix change evaluation rlang","code":""},{"path":"/news/index.html","id":"desctable-011","dir":"Changelog","previous_headings":"","what":"desctable 0.1.1","title":"desctable 0.1.1","text":"CRAN release: 2018-01-30","code":""},{"path":"/news/index.html","id":"bugfix-0-1-1","dir":"Changelog","previous_headings":"","what":"Bugfix","title":"desctable 0.1.1","text":"Fix changing arguments fisher.test upstream","code":""},{"path":"/news/index.html","id":"desctable-010","dir":"Changelog","previous_headings":"","what":"desctable 0.1.0","title":"desctable 0.1.0","text":"CRAN release: 2017-05-15 Initial release.","code":""}]
